{
  "contractName": "Storage",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setNftOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "isNftActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "depositNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenTicker",
          "type": "string"
        }
      ],
      "name": "createFraction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "withdrawNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getNftOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getIsChangingNftOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getFractionAddressFromNft",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract baseFractionToken",
          "name": "_fractionToken",
          "type": "address"
        }
      ],
      "name": "getNftIdFromFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract baseFractionToken",
          "name": "_fractionToken",
          "type": "address"
        }
      ],
      "name": "getNftAddressFromFraction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getIsNftDeposited",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getIsNftFractionalised",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "setIsNftChangingOwnerTrue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenTicker\",\"type\":\"string\"}],\"name\":\"createFraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getFractionAddressFromNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getIsChangingNftOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getIsNftDeposited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getIsNftFractionalised\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract baseFractionToken\",\"name\":\"_fractionToken\",\"type\":\"address\"}],\"name\":\"getNftAddressFromFraction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract baseFractionToken\",\"name\":\"_fractionToken\",\"type\":\"address\"}],\"name\":\"getNftIdFromFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"getNftOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"isNftActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"setIsNftChangingOwnerTrue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setNftOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/FractionToken.sol\":{\"keccak256\":\"0x5378ce9bc16b36c872d8b5ac1d1529178710bb546db10b16a7ddc645f2fe5ee1\",\"urls\":[\"bzz-raw://597b2940a42392122e1032095d68b0fef3eaf310981fec84aaa81c8faefe6df2\",\"dweb:/ipfs/QmZAz3acuzTii9GyeNUfNgqzgwmbBzFExUnLwFmaAXpWTu\"]},\"project:/contracts/Storage.sol\":{\"keccak256\":\"0xa188bec6f1f62e9b21ab6d4cc58a9511cbd2d98219650b3d26786a31784406e9\",\"urls\":[\"bzz-raw://e78bf21b955c776956fca953d4b4325f0acea4af0672c7b810be705260824009\",\"dweb:/ipfs/QmdYrSBUyLw7F7pvT9pgUTpjgz6bv3NuAqb5L2nagBGCGw\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614950806100616000396000f3fe60806040523480156200001157600080fd5b5060043610620001005760003560e01c8063ab2397f71162000099578063b6926178116200006f578063b692617814620002df578063d8fc65191462000315578063dcea9a961462000335578063f2bb4a88146200036b5762000100565b8063ab2397f71462000253578063add933a31462000289578063afabcf7d14620002bf5762000100565b80636b1ac39811620000db5780636b1ac39814620001a75780638c4d094a14620001c7578063a72e2cd614620001fd578063aafef267146200021d5762000100565b8063150b7a021462000105578063491f6674146200013b578063504461361462000171575b600080fd5b6200012360048036038101906200011d9190620013f0565b6200038b565b604051620001329190620014c3565b60405180910390f35b62000159600480360381019062000153919062001525565b620003a0565b60405162000168919062001589565b60405180910390f35b6200018f600480360381019062000189919062001525565b62000408565b6040516200019e9190620015b7565b60405180910390f35b620001c56004803603810190620001bf919062001525565b62000483565b005b620001e56004803603810190620001df919062001619565b620005d1565b604051620001f491906200165c565b60405180910390f35b6200021b600480360381019062000215919062001679565b6200061a565b005b6200023b600480360381019062000235919062001525565b6200078e565b6040516200024a9190620015b7565b60405180910390f35b6200027160048036038101906200026b919062001525565b62000809565b60405162000280919062001589565b60405180910390f35b620002a76004803603810190620002a1919062001619565b62000871565b604051620002b69190620015b7565b60405180910390f35b620002dd6004803603810190620002d791906200181d565b620008da565b005b620002fd6004803603810190620002f7919062001525565b62000bac565b6040516200030c919062001589565b60405180910390f35b6200033360048036038101906200032d919062001679565b62000c13565b005b6200035360048036038101906200034d919062001525565b62000f4d565b60405162000362919062001589565b60405180910390f35b620003896004803603810190620003839190620018f7565b6200103b565b005b600063150b7a0260e01b905095945050505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000564576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200055b90620019da565b60405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3330856040518463ffffffff1660e01b81526004016200065e93929190620019fc565b600060405180830381600087803b1580156200067957600080fd5b505af11580156200068e573d6000803e3d6000fd5b5050505060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060009054906101000a900460ff166200097e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009759062001aaf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a569062001b21565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060008187338686898b3060405162000ae090620012c0565b62000af398979695949392919062001c30565b604051809103906000f08015801562000b10573d6000803e3d6000fd5b50905080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60008290506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1615151462000d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000d2a9062001d1c565b60405180910390fd5b60001515600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515148062000e9257508073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000deb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e11919062001d55565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040162000e4c9190620015b7565b602060405180830381865afa15801562000e6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e90919062001d55565b145b62000ed4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ecb9062001e49565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b815260040162000f1393929190620019fc565b600060405180830381600087803b15801562000f2e57600080fd5b505af115801562000f43573d6000803e3d6000fd5b5050505050505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1690506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1690508180156200101c5750805b156200102e5760019250505062001035565b6000925050505b92915050565b60011515600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514620010e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620010d99062001ebb565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620011c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620011ba9062001f53565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6129a58062001f7683390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200130f82620012e2565b9050919050565b620013218162001302565b81146200132d57600080fd5b50565b600081359050620013418162001316565b92915050565b6000819050919050565b6200135c8162001347565b81146200136857600080fd5b50565b6000813590506200137c8162001351565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112620013aa57620013a962001382565b5b8235905067ffffffffffffffff811115620013ca57620013c962001387565b5b602083019150836001820283011115620013e957620013e86200138c565b5b9250929050565b6000806000806000608086880312156200140f576200140e620012d8565b5b60006200141f8882890162001330565b9550506020620014328882890162001330565b945050604062001445888289016200136b565b935050606086013567ffffffffffffffff811115620014695762001468620012dd565b5b620014778882890162001391565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620014bd8162001486565b82525050565b6000602082019050620014da6000830184620014b2565b92915050565b6000620014ed8262001302565b9050919050565b620014ff81620014e0565b81146200150b57600080fd5b50565b6000813590506200151f81620014f4565b92915050565b600080604083850312156200153f576200153e620012d8565b5b60006200154f858286016200150e565b925050602062001562858286016200136b565b9150509250929050565b60008115159050919050565b62001583816200156c565b82525050565b6000602082019050620015a0600083018462001578565b92915050565b620015b18162001302565b82525050565b6000602082019050620015ce6000830184620015a6565b92915050565b6000620015e18262001302565b9050919050565b620015f381620015d4565b8114620015ff57600080fd5b50565b6000813590506200161381620015e8565b92915050565b600060208284031215620016325762001631620012d8565b5b6000620016428482850162001602565b91505092915050565b620016568162001347565b82525050565b60006020820190506200167360008301846200164b565b92915050565b60008060408385031215620016935762001692620012d8565b5b6000620016a38582860162001330565b9250506020620016b6858286016200136b565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200171082620016c5565b810181811067ffffffffffffffff82111715620017325762001731620016d6565b5b80604052505050565b600062001747620012ce565b905062001755828262001705565b919050565b600067ffffffffffffffff821115620017785762001777620016d6565b5b6200178382620016c5565b9050602081019050919050565b82818337600083830152505050565b6000620017b6620017b0846200175a565b6200173b565b905082815260208101848484011115620017d557620017d4620016c0565b5b620017e284828562001790565b509392505050565b600082601f83011262001802576200180162001382565b5b8135620018148482602086016200179f565b91505092915050565b60008060008060008060c087890312156200183d576200183c620012d8565b5b60006200184d89828a0162001330565b96505060206200186089828a016200136b565b95505060406200187389828a016200136b565b94505060606200188689828a016200136b565b935050608087013567ffffffffffffffff811115620018aa57620018a9620012dd565b5b620018b889828a01620017ea565b92505060a087013567ffffffffffffffff811115620018dc57620018db620012dd565b5b620018ea89828a01620017ea565b9150509295509295509295565b600080600060608486031215620019135762001912620012d8565b5b600062001923868287016200150e565b935050602062001936868287016200136b565b9250506040620019498682870162001330565b9150509250925092565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000620019c260218362001953565b9150620019cf8262001964565b604082019050919050565b60006020820190508181036000830152620019f581620019b3565b9050919050565b600060608201905062001a136000830186620015a6565b62001a226020830185620015a6565b62001a3160408301846200164b565b949350505050565b7f54686973204e4654206861736e2774206265656e206465706f7369746564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b600062001a9760228362001953565b915062001aa48262001a39565b604082019050919050565b6000602082019050818103600083015262001aca8162001a88565b9050919050565b7f596f7520646f206e6f74206f776e2074686973204e4654000000000000000000600082015250565b600062001b0960178362001953565b915062001b168262001ad1565b602082019050919050565b6000602082019050818103600083015262001b3c8162001afa565b9050919050565b6000819050919050565b600062001b6e62001b6862001b6284620012e2565b62001b43565b620012e2565b9050919050565b600062001b828262001b4d565b9050919050565b600062001b968262001b75565b9050919050565b62001ba88162001b89565b82525050565b600081519050919050565b60005b8381101562001bd957808201518184015260208101905062001bbc565b8381111562001be9576000848401525b50505050565b600062001bfc8262001bae565b62001c08818562001953565b935062001c1a81856020860162001bb9565b62001c2581620016c5565b840191505092915050565b60006101008201905062001c48600083018b62001b9d565b62001c57602083018a6200164b565b62001c666040830189620015a6565b818103606083015262001c7a818862001bef565b9050818103608083015262001c90818762001bef565b905062001ca160a08301866200164b565b62001cb060c08301856200164b565b62001cbf60e0830184620015a6565b9998505050505050505050565b7f54686973204e4654206973206e6f742077697468647261776e00000000000000600082015250565b600062001d0460198362001953565b915062001d118262001ccc565b602082019050919050565b6000602082019050818103600083015262001d378162001cf5565b9050919050565b60008151905062001d4f8162001351565b92915050565b60006020828403121562001d6e5762001d6d620012d8565b5b600062001d7e8482850162001d3e565b91505092915050565b7f4e46542063616e6e6f742062652077697468647261776e2c206574686572207460008201527f6865204e465420686173206265656e2077697468647261776e206f7220796f7560208201527f20646f206e6f74206f776e2074686520746f74616c20737570706c79206f662060408201527f6672616374696f6e20746f6b656e730000000000000000000000000000000000606082015250565b600062001e31606f8362001953565b915062001e3e8262001d87565b608082019050919050565b6000602082019050818103600083015262001e648162001e22565b9050919050565b7f4e6674206973206e6f74206368616e67696e67206f776e657200000000000000600082015250565b600062001ea360198362001953565b915062001eb08262001e6b565b602082019050919050565b6000602082019050818103600083015262001ed68162001e94565b9050919050565b7f4f6e6c792063757272656e74206f776e6572206f66204e46542063616e20636860008201527f616e6765204e4654206f776e6572000000000000000000000000000000000000602082015250565b600062001f3b602e8362001953565b915062001f488262001edd565b604082019050919050565b6000602082019050818103600083015262001f6e8162001f2c565b905091905056fe60806040523480156200001157600080fd5b50604051620029a5380380620029a583398181016040528101906200003791906200064f565b84848160039080519060200190620000519291906200031d565b5080600490805190602001906200006a9291906200031d565b50505087600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660098190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160078190555062000131600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846200019b60201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548160ff0219169083151502179055505050505050505050620008f7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200020d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020490620007b7565b60405180910390fd5b62000221600083836200031360201b60201c565b806002600082825462000235919062000808565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200028c919062000808565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002f3919062000876565b60405180910390a36200030f600083836200031860201b60201c565b5050565b505050565b505050565b8280546200032b90620008c2565b90600052602060002090601f0160209004810192826200034f57600085556200039b565b82601f106200036a57805160ff19168380011785556200039b565b828001600101855582156200039b579182015b828111156200039a5782518255916020019190600101906200037d565b5b509050620003aa9190620003ae565b5090565b5b80821115620003c9576000816000905550600101620003af565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040e82620003e1565b9050919050565b6000620004228262000401565b9050919050565b620004348162000415565b81146200044057600080fd5b50565b600081519050620004548162000429565b92915050565b6000819050919050565b6200046f816200045a565b81146200047b57600080fd5b50565b6000815190506200048f8162000464565b92915050565b620004a08162000401565b8114620004ac57600080fd5b50565b600081519050620004c08162000495565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200051b82620004d0565b810181811067ffffffffffffffff821117156200053d576200053c620004e1565b5b80604052505050565b600062000552620003cd565b905062000560828262000510565b919050565b600067ffffffffffffffff821115620005835762000582620004e1565b5b6200058e82620004d0565b9050602081019050919050565b60005b83811015620005bb5780820151818401526020810190506200059e565b83811115620005cb576000848401525b50505050565b6000620005e8620005e28462000565565b62000546565b905082815260208101848484011115620006075762000606620004cb565b5b620006148482856200059b565b509392505050565b600082601f830112620006345762000633620004c6565b5b815162000646848260208601620005d1565b91505092915050565b600080600080600080600080610100898b031215620006735762000672620003d7565b5b6000620006838b828c0162000443565b9850506020620006968b828c016200047e565b9750506040620006a98b828c01620004af565b965050606089015167ffffffffffffffff811115620006cd57620006cc620003dc565b5b620006db8b828c016200061c565b955050608089015167ffffffffffffffff811115620006ff57620006fe620003dc565b5b6200070d8b828c016200061c565b94505060a0620007208b828c016200047e565b93505060c0620007338b828c016200047e565b92505060e0620007468b828c01620004af565b9150509295985092959890939650565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006200079f601f8362000756565b9150620007ac8262000767565b602082019050919050565b60006020820190508181036000830152620007d28162000790565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000815826200045a565b915062000822836200045a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200085a5762000859620007d9565b5b828201905092915050565b62000870816200045a565b82525050565b60006020820190506200088d600083018462000865565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008db57607f821691505b602082108103620008f157620008f062000893565b5b50919050565b61209e80620009076000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b411461031f578063a457c2d71461033d578063a9059cbb1461036d578063ac513fb81461039d578063dd62ed3e146103bb5761012c565b806370a082311461027d57806376501221146102ad57806379cc6790146102c95780639385e55a146102e557806394ee29d9146103015761012c565b8063313ce567116100f4578063313ce567146101eb578063395093511461020957806342966c681461023957806362032bc514610255578063644c45e01461025f5761012c565b806306fdde031461013157806309323b021461014f578063095ea7b31461016d57806318160ddd1461019d57806323b872dd146101bb575b600080fd5b6101396103eb565b6040516101469190611425565b60405180910390f35b61015761047d565b6040516101649190611462565b60405180910390f35b61018760048036038101906101829190611516565b610494565b6040516101949190611462565b60405180910390f35b6101a56104b7565b6040516101b29190611565565b60405180910390f35b6101d560048036038101906101d09190611580565b6104c1565b6040516101e29190611462565b60405180910390f35b6101f3610557565b60405161020091906115ef565b60405180910390f35b610223600480360381019061021e9190611516565b610560565b6040516102309190611462565b60405180910390f35b610253600480360381019061024e919061160a565b610597565b005b61025d6105ab565b005b610267610658565b6040516102749190611565565b60405180910390f35b61029760048036038101906102929190611637565b610662565b6040516102a49190611565565b60405180910390f35b6102c760048036038101906102c29190611637565b6106aa565b005b6102e360048036038101906102de9190611516565b61077e565b005b6102ff60048036038101906102fa9190611664565b61079e565b005b6103096109fe565b6040516103169190611762565b60405180910390f35b610327610a8c565b6040516103349190611425565b60405180910390f35b61035760048036038101906103529190611516565b610b1e565b6040516103649190611462565b60405180910390f35b61038760048036038101906103829190611516565b610b95565b6040516103949190611462565b60405180910390f35b6103a5610c1f565b6040516103b291906117e3565b60405180910390f35b6103d560048036038101906103d09190611664565b610c49565b6040516103e29190611565565b60405180910390f35b6060600380546103fa9061182d565b80601f01602080910402602001604051908101604052809291908181526020018280546104269061182d565b80156104735780601f1061044857610100808354040283529160200191610473565b820191906000526020600020905b81548152906001019060200180831161045657829003601f168201915b5050505050905090565b6000600b60009054906101000a900460ff16905090565b60008061049f610cd0565b90506104ac818585610cd8565b600191505092915050565b6000600254905090565b6000806104cc610cd0565b90506104d9858285610ea1565b60006064600754856104eb919061188d565b6104f59190611916565b9050600081856105059190611947565b905061053487600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610f2d565b61053f878783610f2d565b610549868861079e565b600193505050509392505050565b60006012905090565b60008061056b610cd0565b905061058c81858561057d8589610c49565b610587919061197b565b610cd8565b600191505092915050565b6105a86105a2610cd0565b826111ac565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063290611a43565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550565b6000600954905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190611ad5565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6107908261078a610cd0565b83610ea1565b61079a82826111ac565b5050565b600a829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060011515600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151480156108c1575060006108bf82610662565b145b156109fa5760005b600a805490508110156109f8578173ffffffffffffffffffffffffffffffffffffffff16600a828154811061090157610900611af5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109e557600a818154811061095b5761095a611af5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109f8565b80806109f090611b24565b9150506108c9565b505b5050565b6060600a805480602002602001604051908101604052809291908181526020018280548015610a8257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a38575b5050505050905090565b606060048054610a9b9061182d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac79061182d565b8015610b145780601f10610ae957610100808354040283529160200191610b14565b820191906000526020600020905b815481529060010190602001808311610af757829003601f168201915b5050505050905090565b600080610b29610cd0565b90506000610b378286610c49565b905083811015610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390611bde565b60405180910390fd5b610b898286868403610cd8565b60019250505092915050565b600080606460075484610ba8919061188d565b610bb29190611916565b905060008184610bc29190611947565b90506000610bce610cd0565b9050610bfd81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610f2d565b610c08818784610f2d565b610c12868261079e565b6001935050505092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e90611c70565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad90611d02565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e949190611565565b60405180910390a3505050565b6000610ead8484610c49565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f275781811015610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1090611d6e565b60405180910390fd5b610f268484848403610cd8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9390611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361100b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100290611e92565b60405180910390fd5b611016838383611382565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390611f24565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461112f919061197b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111939190611565565b60405180910390a36111a6848484611387565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361121b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121290611fb6565b60405180910390fd5b61122782600083611382565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490612048565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546113049190611947565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113699190611565565b60405180910390a361137d83600084611387565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113c65780820151818401526020810190506113ab565b838111156113d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006113f78261138c565b6114018185611397565b93506114118185602086016113a8565b61141a816113db565b840191505092915050565b6000602082019050818103600083015261143f81846113ec565b905092915050565b60008115159050919050565b61145c81611447565b82525050565b60006020820190506114776000830184611453565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114ad82611482565b9050919050565b6114bd816114a2565b81146114c857600080fd5b50565b6000813590506114da816114b4565b92915050565b6000819050919050565b6114f3816114e0565b81146114fe57600080fd5b50565b600081359050611510816114ea565b92915050565b6000806040838503121561152d5761152c61147d565b5b600061153b858286016114cb565b925050602061154c85828601611501565b9150509250929050565b61155f816114e0565b82525050565b600060208201905061157a6000830184611556565b92915050565b6000806000606084860312156115995761159861147d565b5b60006115a7868287016114cb565b93505060206115b8868287016114cb565b92505060406115c986828701611501565b9150509250925092565b600060ff82169050919050565b6115e9816115d3565b82525050565b600060208201905061160460008301846115e0565b92915050565b6000602082840312156116205761161f61147d565b5b600061162e84828501611501565b91505092915050565b60006020828403121561164d5761164c61147d565b5b600061165b848285016114cb565b91505092915050565b6000806040838503121561167b5761167a61147d565b5b6000611689858286016114cb565b925050602061169a858286016114cb565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116d9816114a2565b82525050565b60006116eb83836116d0565b60208301905092915050565b6000602082019050919050565b600061170f826116a4565b61171981856116af565b9350611724836116c0565b8060005b8381101561175557815161173c88826116df565b9750611747836116f7565b925050600181019050611728565b5085935050505092915050565b6000602082019050818103600083015261177c8184611704565b905092915050565b6000819050919050565b60006117a96117a461179f84611482565b611784565b611482565b9050919050565b60006117bb8261178e565b9050919050565b60006117cd826117b0565b9050919050565b6117dd816117c2565b82525050565b60006020820190506117f860008301846117d4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061184557607f821691505b602082108103611858576118576117fe565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611898826114e0565b91506118a3836114e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118dc576118db61185e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611921826114e0565b915061192c836114e0565b92508261193c5761193b6118e7565b5b828204905092915050565b6000611952826114e0565b915061195d836114e0565b9250828210156119705761196f61185e565b5b828203905092915050565b6000611986826114e0565b9150611991836114e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119c6576119c561185e565b5b828201905092915050565b7f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460008201527f2066726f6d207468652073746f7261676520636f6e7472616374000000000000602082015250565b6000611a2d603a83611397565b9150611a38826119d1565b604082019050919050565b60006020820190508181036000830152611a5c81611a20565b9050919050565b7f6f6e6c792073746f7261676520636f6e74726163742063616e2075706461746560008201527f2074686973000000000000000000000000000000000000000000000000000000602082015250565b6000611abf602583611397565b9150611aca82611a63565b604082019050919050565b60006020820190508181036000830152611aee81611ab2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b2f826114e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b6157611b6061185e565b5b600182019050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611bc8602583611397565b9150611bd382611b6c565b604082019050919050565b60006020820190508181036000830152611bf781611bbb565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611c5a602483611397565b9150611c6582611bfe565b604082019050919050565b60006020820190508181036000830152611c8981611c4d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cec602283611397565b9150611cf782611c90565b604082019050919050565b60006020820190508181036000830152611d1b81611cdf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611d58601d83611397565b9150611d6382611d22565b602082019050919050565b60006020820190508181036000830152611d8781611d4b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611dea602583611397565b9150611df582611d8e565b604082019050919050565b60006020820190508181036000830152611e1981611ddd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611e7c602383611397565b9150611e8782611e20565b604082019050919050565b60006020820190508181036000830152611eab81611e6f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611f0e602683611397565b9150611f1982611eb2565b604082019050919050565b60006020820190508181036000830152611f3d81611f01565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611fa0602183611397565b9150611fab82611f44565b604082019050919050565b60006020820190508181036000830152611fcf81611f93565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612032602283611397565b915061203d82611fd6565b604082019050919050565b6000602082019050818103600083015261206181612025565b905091905056fea26469706673582212208a7d00a07932386d250061308045f68763543bb6351bf3ed968393b18ce4a7c364736f6c634300080e0033a26469706673582212204c6ef004b120852da76b405a9e82fce51869e8c59f6e277bb161f8950df2e93364736f6c634300080e0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001005760003560e01c8063ab2397f71162000099578063b6926178116200006f578063b692617814620002df578063d8fc65191462000315578063dcea9a961462000335578063f2bb4a88146200036b5762000100565b8063ab2397f71462000253578063add933a31462000289578063afabcf7d14620002bf5762000100565b80636b1ac39811620000db5780636b1ac39814620001a75780638c4d094a14620001c7578063a72e2cd614620001fd578063aafef267146200021d5762000100565b8063150b7a021462000105578063491f6674146200013b578063504461361462000171575b600080fd5b6200012360048036038101906200011d9190620013f0565b6200038b565b604051620001329190620014c3565b60405180910390f35b62000159600480360381019062000153919062001525565b620003a0565b60405162000168919062001589565b60405180910390f35b6200018f600480360381019062000189919062001525565b62000408565b6040516200019e9190620015b7565b60405180910390f35b620001c56004803603810190620001bf919062001525565b62000483565b005b620001e56004803603810190620001df919062001619565b620005d1565b604051620001f491906200165c565b60405180910390f35b6200021b600480360381019062000215919062001679565b6200061a565b005b6200023b600480360381019062000235919062001525565b6200078e565b6040516200024a9190620015b7565b60405180910390f35b6200027160048036038101906200026b919062001525565b62000809565b60405162000280919062001589565b60405180910390f35b620002a76004803603810190620002a1919062001619565b62000871565b604051620002b69190620015b7565b60405180910390f35b620002dd6004803603810190620002d791906200181d565b620008da565b005b620002fd6004803603810190620002f7919062001525565b62000bac565b6040516200030c919062001589565b60405180910390f35b6200033360048036038101906200032d919062001679565b62000c13565b005b6200035360048036038101906200034d919062001525565b62000f4d565b60405162000362919062001589565b60405180910390f35b620003896004803603810190620003839190620018f7565b6200103b565b005b600063150b7a0260e01b905095945050505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000564576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200055b90620019da565b60405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3330856040518463ffffffff1660e01b81526004016200065e93929190620019fc565b600060405180830381600087803b1580156200067957600080fd5b505af11580156200068e573d6000803e3d6000fd5b5050505060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060009054906101000a900460ff166200097e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009759062001aaf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a569062001b21565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060008187338686898b3060405162000ae090620012c0565b62000af398979695949392919062001c30565b604051809103906000f08015801562000b10573d6000803e3d6000fd5b50905080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60008290506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1615151462000d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000d2a9062001d1c565b60405180910390fd5b60001515600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515148062000e9257508073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000deb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e11919062001d55565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040162000e4c9190620015b7565b602060405180830381865afa15801562000e6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e90919062001d55565b145b62000ed4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ecb9062001e49565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b815260040162000f1393929190620019fc565b600060405180830381600087803b15801562000f2e57600080fd5b505af115801562000f43573d6000803e3d6000fd5b5050505050505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1690506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1690508180156200101c5750805b156200102e5760019250505062001035565b6000925050505b92915050565b60011515600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514620010e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620010d99062001ebb565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620011c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620011ba9062001f53565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6129a58062001f7683390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200130f82620012e2565b9050919050565b620013218162001302565b81146200132d57600080fd5b50565b600081359050620013418162001316565b92915050565b6000819050919050565b6200135c8162001347565b81146200136857600080fd5b50565b6000813590506200137c8162001351565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112620013aa57620013a962001382565b5b8235905067ffffffffffffffff811115620013ca57620013c962001387565b5b602083019150836001820283011115620013e957620013e86200138c565b5b9250929050565b6000806000806000608086880312156200140f576200140e620012d8565b5b60006200141f8882890162001330565b9550506020620014328882890162001330565b945050604062001445888289016200136b565b935050606086013567ffffffffffffffff811115620014695762001468620012dd565b5b620014778882890162001391565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620014bd8162001486565b82525050565b6000602082019050620014da6000830184620014b2565b92915050565b6000620014ed8262001302565b9050919050565b620014ff81620014e0565b81146200150b57600080fd5b50565b6000813590506200151f81620014f4565b92915050565b600080604083850312156200153f576200153e620012d8565b5b60006200154f858286016200150e565b925050602062001562858286016200136b565b9150509250929050565b60008115159050919050565b62001583816200156c565b82525050565b6000602082019050620015a0600083018462001578565b92915050565b620015b18162001302565b82525050565b6000602082019050620015ce6000830184620015a6565b92915050565b6000620015e18262001302565b9050919050565b620015f381620015d4565b8114620015ff57600080fd5b50565b6000813590506200161381620015e8565b92915050565b600060208284031215620016325762001631620012d8565b5b6000620016428482850162001602565b91505092915050565b620016568162001347565b82525050565b60006020820190506200167360008301846200164b565b92915050565b60008060408385031215620016935762001692620012d8565b5b6000620016a38582860162001330565b9250506020620016b6858286016200136b565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200171082620016c5565b810181811067ffffffffffffffff82111715620017325762001731620016d6565b5b80604052505050565b600062001747620012ce565b905062001755828262001705565b919050565b600067ffffffffffffffff821115620017785762001777620016d6565b5b6200178382620016c5565b9050602081019050919050565b82818337600083830152505050565b6000620017b6620017b0846200175a565b6200173b565b905082815260208101848484011115620017d557620017d4620016c0565b5b620017e284828562001790565b509392505050565b600082601f83011262001802576200180162001382565b5b8135620018148482602086016200179f565b91505092915050565b60008060008060008060c087890312156200183d576200183c620012d8565b5b60006200184d89828a0162001330565b96505060206200186089828a016200136b565b95505060406200187389828a016200136b565b94505060606200188689828a016200136b565b935050608087013567ffffffffffffffff811115620018aa57620018a9620012dd565b5b620018b889828a01620017ea565b92505060a087013567ffffffffffffffff811115620018dc57620018db620012dd565b5b620018ea89828a01620017ea565b9150509295509295509295565b600080600060608486031215620019135762001912620012d8565b5b600062001923868287016200150e565b935050602062001936868287016200136b565b9250506040620019498682870162001330565b9150509250925092565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000620019c260218362001953565b9150620019cf8262001964565b604082019050919050565b60006020820190508181036000830152620019f581620019b3565b9050919050565b600060608201905062001a136000830186620015a6565b62001a226020830185620015a6565b62001a3160408301846200164b565b949350505050565b7f54686973204e4654206861736e2774206265656e206465706f7369746564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b600062001a9760228362001953565b915062001aa48262001a39565b604082019050919050565b6000602082019050818103600083015262001aca8162001a88565b9050919050565b7f596f7520646f206e6f74206f776e2074686973204e4654000000000000000000600082015250565b600062001b0960178362001953565b915062001b168262001ad1565b602082019050919050565b6000602082019050818103600083015262001b3c8162001afa565b9050919050565b6000819050919050565b600062001b6e62001b6862001b6284620012e2565b62001b43565b620012e2565b9050919050565b600062001b828262001b4d565b9050919050565b600062001b968262001b75565b9050919050565b62001ba88162001b89565b82525050565b600081519050919050565b60005b8381101562001bd957808201518184015260208101905062001bbc565b8381111562001be9576000848401525b50505050565b600062001bfc8262001bae565b62001c08818562001953565b935062001c1a81856020860162001bb9565b62001c2581620016c5565b840191505092915050565b60006101008201905062001c48600083018b62001b9d565b62001c57602083018a6200164b565b62001c666040830189620015a6565b818103606083015262001c7a818862001bef565b9050818103608083015262001c90818762001bef565b905062001ca160a08301866200164b565b62001cb060c08301856200164b565b62001cbf60e0830184620015a6565b9998505050505050505050565b7f54686973204e4654206973206e6f742077697468647261776e00000000000000600082015250565b600062001d0460198362001953565b915062001d118262001ccc565b602082019050919050565b6000602082019050818103600083015262001d378162001cf5565b9050919050565b60008151905062001d4f8162001351565b92915050565b60006020828403121562001d6e5762001d6d620012d8565b5b600062001d7e8482850162001d3e565b91505092915050565b7f4e46542063616e6e6f742062652077697468647261776e2c206574686572207460008201527f6865204e465420686173206265656e2077697468647261776e206f7220796f7560208201527f20646f206e6f74206f776e2074686520746f74616c20737570706c79206f662060408201527f6672616374696f6e20746f6b656e730000000000000000000000000000000000606082015250565b600062001e31606f8362001953565b915062001e3e8262001d87565b608082019050919050565b6000602082019050818103600083015262001e648162001e22565b9050919050565b7f4e6674206973206e6f74206368616e67696e67206f776e657200000000000000600082015250565b600062001ea360198362001953565b915062001eb08262001e6b565b602082019050919050565b6000602082019050818103600083015262001ed68162001e94565b9050919050565b7f4f6e6c792063757272656e74206f776e6572206f66204e46542063616e20636860008201527f616e6765204e4654206f776e6572000000000000000000000000000000000000602082015250565b600062001f3b602e8362001953565b915062001f488262001edd565b604082019050919050565b6000602082019050818103600083015262001f6e8162001f2c565b905091905056fe60806040523480156200001157600080fd5b50604051620029a5380380620029a583398181016040528101906200003791906200064f565b84848160039080519060200190620000519291906200031d565b5080600490805190602001906200006a9291906200031d565b50505087600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660098190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160078190555062000131600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846200019b60201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548160ff0219169083151502179055505050505050505050620008f7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200020d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020490620007b7565b60405180910390fd5b62000221600083836200031360201b60201c565b806002600082825462000235919062000808565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200028c919062000808565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002f3919062000876565b60405180910390a36200030f600083836200031860201b60201c565b5050565b505050565b505050565b8280546200032b90620008c2565b90600052602060002090601f0160209004810192826200034f57600085556200039b565b82601f106200036a57805160ff19168380011785556200039b565b828001600101855582156200039b579182015b828111156200039a5782518255916020019190600101906200037d565b5b509050620003aa9190620003ae565b5090565b5b80821115620003c9576000816000905550600101620003af565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040e82620003e1565b9050919050565b6000620004228262000401565b9050919050565b620004348162000415565b81146200044057600080fd5b50565b600081519050620004548162000429565b92915050565b6000819050919050565b6200046f816200045a565b81146200047b57600080fd5b50565b6000815190506200048f8162000464565b92915050565b620004a08162000401565b8114620004ac57600080fd5b50565b600081519050620004c08162000495565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200051b82620004d0565b810181811067ffffffffffffffff821117156200053d576200053c620004e1565b5b80604052505050565b600062000552620003cd565b905062000560828262000510565b919050565b600067ffffffffffffffff821115620005835762000582620004e1565b5b6200058e82620004d0565b9050602081019050919050565b60005b83811015620005bb5780820151818401526020810190506200059e565b83811115620005cb576000848401525b50505050565b6000620005e8620005e28462000565565b62000546565b905082815260208101848484011115620006075762000606620004cb565b5b620006148482856200059b565b509392505050565b600082601f830112620006345762000633620004c6565b5b815162000646848260208601620005d1565b91505092915050565b600080600080600080600080610100898b031215620006735762000672620003d7565b5b6000620006838b828c0162000443565b9850506020620006968b828c016200047e565b9750506040620006a98b828c01620004af565b965050606089015167ffffffffffffffff811115620006cd57620006cc620003dc565b5b620006db8b828c016200061c565b955050608089015167ffffffffffffffff811115620006ff57620006fe620003dc565b5b6200070d8b828c016200061c565b94505060a0620007208b828c016200047e565b93505060c0620007338b828c016200047e565b92505060e0620007468b828c01620004af565b9150509295985092959890939650565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006200079f601f8362000756565b9150620007ac8262000767565b602082019050919050565b60006020820190508181036000830152620007d28162000790565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000815826200045a565b915062000822836200045a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200085a5762000859620007d9565b5b828201905092915050565b62000870816200045a565b82525050565b60006020820190506200088d600083018462000865565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008db57607f821691505b602082108103620008f157620008f062000893565b5b50919050565b61209e80620009076000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b411461031f578063a457c2d71461033d578063a9059cbb1461036d578063ac513fb81461039d578063dd62ed3e146103bb5761012c565b806370a082311461027d57806376501221146102ad57806379cc6790146102c95780639385e55a146102e557806394ee29d9146103015761012c565b8063313ce567116100f4578063313ce567146101eb578063395093511461020957806342966c681461023957806362032bc514610255578063644c45e01461025f5761012c565b806306fdde031461013157806309323b021461014f578063095ea7b31461016d57806318160ddd1461019d57806323b872dd146101bb575b600080fd5b6101396103eb565b6040516101469190611425565b60405180910390f35b61015761047d565b6040516101649190611462565b60405180910390f35b61018760048036038101906101829190611516565b610494565b6040516101949190611462565b60405180910390f35b6101a56104b7565b6040516101b29190611565565b60405180910390f35b6101d560048036038101906101d09190611580565b6104c1565b6040516101e29190611462565b60405180910390f35b6101f3610557565b60405161020091906115ef565b60405180910390f35b610223600480360381019061021e9190611516565b610560565b6040516102309190611462565b60405180910390f35b610253600480360381019061024e919061160a565b610597565b005b61025d6105ab565b005b610267610658565b6040516102749190611565565b60405180910390f35b61029760048036038101906102929190611637565b610662565b6040516102a49190611565565b60405180910390f35b6102c760048036038101906102c29190611637565b6106aa565b005b6102e360048036038101906102de9190611516565b61077e565b005b6102ff60048036038101906102fa9190611664565b61079e565b005b6103096109fe565b6040516103169190611762565b60405180910390f35b610327610a8c565b6040516103349190611425565b60405180910390f35b61035760048036038101906103529190611516565b610b1e565b6040516103649190611462565b60405180910390f35b61038760048036038101906103829190611516565b610b95565b6040516103949190611462565b60405180910390f35b6103a5610c1f565b6040516103b291906117e3565b60405180910390f35b6103d560048036038101906103d09190611664565b610c49565b6040516103e29190611565565b60405180910390f35b6060600380546103fa9061182d565b80601f01602080910402602001604051908101604052809291908181526020018280546104269061182d565b80156104735780601f1061044857610100808354040283529160200191610473565b820191906000526020600020905b81548152906001019060200180831161045657829003601f168201915b5050505050905090565b6000600b60009054906101000a900460ff16905090565b60008061049f610cd0565b90506104ac818585610cd8565b600191505092915050565b6000600254905090565b6000806104cc610cd0565b90506104d9858285610ea1565b60006064600754856104eb919061188d565b6104f59190611916565b9050600081856105059190611947565b905061053487600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610f2d565b61053f878783610f2d565b610549868861079e565b600193505050509392505050565b60006012905090565b60008061056b610cd0565b905061058c81858561057d8589610c49565b610587919061197b565b610cd8565b600191505092915050565b6105a86105a2610cd0565b826111ac565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063290611a43565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550565b6000600954905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190611ad5565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6107908261078a610cd0565b83610ea1565b61079a82826111ac565b5050565b600a829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060011515600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151480156108c1575060006108bf82610662565b145b156109fa5760005b600a805490508110156109f8578173ffffffffffffffffffffffffffffffffffffffff16600a828154811061090157610900611af5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109e557600a818154811061095b5761095a611af5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109f8565b80806109f090611b24565b9150506108c9565b505b5050565b6060600a805480602002602001604051908101604052809291908181526020018280548015610a8257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a38575b5050505050905090565b606060048054610a9b9061182d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac79061182d565b8015610b145780601f10610ae957610100808354040283529160200191610b14565b820191906000526020600020905b815481529060010190602001808311610af757829003601f168201915b5050505050905090565b600080610b29610cd0565b90506000610b378286610c49565b905083811015610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390611bde565b60405180910390fd5b610b898286868403610cd8565b60019250505092915050565b600080606460075484610ba8919061188d565b610bb29190611916565b905060008184610bc29190611947565b90506000610bce610cd0565b9050610bfd81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610f2d565b610c08818784610f2d565b610c12868261079e565b6001935050505092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e90611c70565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad90611d02565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e949190611565565b60405180910390a3505050565b6000610ead8484610c49565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f275781811015610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1090611d6e565b60405180910390fd5b610f268484848403610cd8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9390611e00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361100b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100290611e92565b60405180910390fd5b611016838383611382565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390611f24565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461112f919061197b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111939190611565565b60405180910390a36111a6848484611387565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361121b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121290611fb6565b60405180910390fd5b61122782600083611382565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490612048565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546113049190611947565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113699190611565565b60405180910390a361137d83600084611387565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113c65780820151818401526020810190506113ab565b838111156113d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006113f78261138c565b6114018185611397565b93506114118185602086016113a8565b61141a816113db565b840191505092915050565b6000602082019050818103600083015261143f81846113ec565b905092915050565b60008115159050919050565b61145c81611447565b82525050565b60006020820190506114776000830184611453565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114ad82611482565b9050919050565b6114bd816114a2565b81146114c857600080fd5b50565b6000813590506114da816114b4565b92915050565b6000819050919050565b6114f3816114e0565b81146114fe57600080fd5b50565b600081359050611510816114ea565b92915050565b6000806040838503121561152d5761152c61147d565b5b600061153b858286016114cb565b925050602061154c85828601611501565b9150509250929050565b61155f816114e0565b82525050565b600060208201905061157a6000830184611556565b92915050565b6000806000606084860312156115995761159861147d565b5b60006115a7868287016114cb565b93505060206115b8868287016114cb565b92505060406115c986828701611501565b9150509250925092565b600060ff82169050919050565b6115e9816115d3565b82525050565b600060208201905061160460008301846115e0565b92915050565b6000602082840312156116205761161f61147d565b5b600061162e84828501611501565b91505092915050565b60006020828403121561164d5761164c61147d565b5b600061165b848285016114cb565b91505092915050565b6000806040838503121561167b5761167a61147d565b5b6000611689858286016114cb565b925050602061169a858286016114cb565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116d9816114a2565b82525050565b60006116eb83836116d0565b60208301905092915050565b6000602082019050919050565b600061170f826116a4565b61171981856116af565b9350611724836116c0565b8060005b8381101561175557815161173c88826116df565b9750611747836116f7565b925050600181019050611728565b5085935050505092915050565b6000602082019050818103600083015261177c8184611704565b905092915050565b6000819050919050565b60006117a96117a461179f84611482565b611784565b611482565b9050919050565b60006117bb8261178e565b9050919050565b60006117cd826117b0565b9050919050565b6117dd816117c2565b82525050565b60006020820190506117f860008301846117d4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061184557607f821691505b602082108103611858576118576117fe565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611898826114e0565b91506118a3836114e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118dc576118db61185e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611921826114e0565b915061192c836114e0565b92508261193c5761193b6118e7565b5b828204905092915050565b6000611952826114e0565b915061195d836114e0565b9250828210156119705761196f61185e565b5b828203905092915050565b6000611986826114e0565b9150611991836114e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119c6576119c561185e565b5b828201905092915050565b7f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460008201527f2066726f6d207468652073746f7261676520636f6e7472616374000000000000602082015250565b6000611a2d603a83611397565b9150611a38826119d1565b604082019050919050565b60006020820190508181036000830152611a5c81611a20565b9050919050565b7f6f6e6c792073746f7261676520636f6e74726163742063616e2075706461746560008201527f2074686973000000000000000000000000000000000000000000000000000000602082015250565b6000611abf602583611397565b9150611aca82611a63565b604082019050919050565b60006020820190508181036000830152611aee81611ab2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b2f826114e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b6157611b6061185e565b5b600182019050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611bc8602583611397565b9150611bd382611b6c565b604082019050919050565b60006020820190508181036000830152611bf781611bbb565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611c5a602483611397565b9150611c6582611bfe565b604082019050919050565b60006020820190508181036000830152611c8981611c4d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cec602283611397565b9150611cf782611c90565b604082019050919050565b60006020820190508181036000830152611d1b81611cdf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611d58601d83611397565b9150611d6382611d22565b602082019050919050565b60006020820190508181036000830152611d8781611d4b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611dea602583611397565b9150611df582611d8e565b604082019050919050565b60006020820190508181036000830152611e1981611ddd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611e7c602383611397565b9150611e8782611e20565b604082019050919050565b60006020820190508181036000830152611eab81611e6f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611f0e602683611397565b9150611f1982611eb2565b604082019050919050565b60006020820190508181036000830152611f3d81611f01565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611fa0602183611397565b9150611fab82611f44565b604082019050919050565b60006020820190508181036000830152611fcf81611f93565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612032602283611397565b915061203d82611fd6565b604082019050919050565b6000602082019050818103600083015261206181612025565b905091905056fea26469706673582212208a7d00a07932386d250061308045f68763543bb6351bf3ed968393b18ce4a7c364736f6c634300080e0033a26469706673582212204c6ef004b120852da76b405a9e82fce51869e8c59f6e277bb161f8950df2e93364736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22219:21",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:21"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:21",
                "type": ""
              }
            ],
            "src": "7:75:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:21"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:21"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:21",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:21",
                "type": ""
              }
            ],
            "src": "334:126:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:21",
                "type": ""
              }
            ],
            "src": "466:96:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:21"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:21"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:21"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:21",
                "type": ""
              }
            ],
            "src": "568:122:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:21"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:21",
                "type": ""
              }
            ],
            "src": "696:139:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:21",
                "type": ""
              }
            ],
            "src": "841:77:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:21"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:21"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:21"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:21",
                "type": ""
              }
            ],
            "src": "924:122:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:21"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:21",
                "type": ""
              }
            ],
            "src": "1052:139:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1306:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1296:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1296:12:21"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1197:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1429:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1419:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1419:12:21"
                }
              ]
            },
            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            "nodeType": "YulFunctionDefinition",
            "src": "1320:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1532:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1549:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1552:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:12:21"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "1443:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1653:478:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1702:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "1704:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1704:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1704:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1681:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1689:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1677:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1696:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1673:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1673:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1666:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1666:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1663:122:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1794:30:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1817:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1804:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1867:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            "nodeType": "YulIdentifier",
                            "src": "1869:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1869:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1869:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1839:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1847:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1836:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1833:117:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1959:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1975:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1983:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1971:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:17:21"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1959:8:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2042:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "2044:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2044:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2044:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "2007:8:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2021:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2029:4:21",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "2017:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2017:17:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:32:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2037:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2000:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:41:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1997:128:21"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1620:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1628:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1636:8:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1646:6:21",
                "type": ""
              }
            ],
            "src": "1579:552:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2273:827:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2320:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2322:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2322:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2322:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2294:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2303:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2290:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2290:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2286:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:120:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2413:117:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2428:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2432:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2457:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2492:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2503:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2488:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2488:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2512:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2467:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2457:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2540:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2555:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2569:2:21",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2559:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2585:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2620:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2631:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2616:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2616:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2640:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2595:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2595:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2585:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2668:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2683:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2697:2:21",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2687:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2713:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2748:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2759:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2744:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2744:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2768:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2723:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2723:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2713:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2796:297:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2811:46:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2842:9:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2853:2:21",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2838:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2838:18:21"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2825:12:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2825:32:21"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2815:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2904:83:21",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "2906:77:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2906:79:21"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2906:79:21"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2876:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2884:18:21",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2873:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:30:21"
                      },
                      "nodeType": "YulIf",
                      "src": "2870:117:21"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3001:82:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3055:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3066:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3051:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3051:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3075:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3019:31:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:64:21"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3001:6:21"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3009:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2211:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2222:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2234:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2242:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2250:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2258:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2266:6:21",
                "type": ""
              }
            ],
            "src": "2137:963:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3150:105:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3160:89:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3175:5:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:66:21",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3171:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:78:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3160:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3132:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3142:7:21",
                "type": ""
              }
            ],
            "src": "3106:149:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3324:52:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3341:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3363:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3346:16:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3346:23:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3334:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3334:36:21"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3312:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3319:3:21",
                "type": ""
              }
            ],
            "src": "3261:115:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3478:122:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3488:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3500:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3496:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3488:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3566:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3579:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3575:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3575:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3524:41:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:69:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3524:69:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3450:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3462:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3473:4:21",
                "type": ""
              }
            ],
            "src": "3382:218:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3666:51:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3676:35:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3705:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3687:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3687:24:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3676:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC721_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3648:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3658:7:21",
                "type": ""
              }
            ],
            "src": "3606:111:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3781:94:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3853:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3862:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3865:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3855:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3855:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3855:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3804:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3844:5:21"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC721_$1743",
                              "nodeType": "YulIdentifier",
                              "src": "3811:32:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3811:39:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3801:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3801:50:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3794:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3794:58:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3791:78:21"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC721_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3774:5:21",
                "type": ""
              }
            ],
            "src": "3723:152:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3948:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3958:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3980:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3967:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3967:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3958:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4038:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC721_$1743",
                      "nodeType": "YulIdentifier",
                      "src": "3996:41:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3996:48:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3996:48:21"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC721_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3926:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3934:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3942:5:21",
                "type": ""
              }
            ],
            "src": "3881:169:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4154:406:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4200:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4202:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4202:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4202:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4175:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4184:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4171:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4171:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4196:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4167:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "4164:119:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4293:132:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4308:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4322:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4312:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4337:78:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4387:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4398:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4383:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4383:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4407:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC721_$1743",
                          "nodeType": "YulIdentifier",
                          "src": "4347:35:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4347:68:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4337:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4435:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4450:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4464:2:21",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4454:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4480:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4515:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4526:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4511:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4511:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4535:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4490:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4490:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4480:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC721_$1743t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4116:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4127:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4139:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4147:6:21",
                "type": ""
              }
            ],
            "src": "4056:504:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4608:48:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4618:32:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4643:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4636:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:13:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4629:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4629:21:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4618:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4590:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4600:7:21",
                "type": ""
              }
            ],
            "src": "4566:90:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4721:50:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4738:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4758:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4743:14:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4743:21:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4731:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4731:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4731:34:21"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4709:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4716:3:21",
                "type": ""
              }
            ],
            "src": "4662:109:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4869:118:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4879:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4891:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4902:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4887:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4879:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4953:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4966:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4977:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4962:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4962:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4915:37:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:65:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4915:65:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4841:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4853:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4864:4:21",
                "type": ""
              }
            ],
            "src": "4777:210:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5058:53:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5075:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5098:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5080:17:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5080:24:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5068:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5068:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5068:37:21"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5046:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5053:3:21",
                "type": ""
              }
            ],
            "src": "4993:118:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5215:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5225:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5237:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5248:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5233:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5225:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5305:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5318:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5329:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5314:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5314:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5261:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:71:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5261:71:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5187:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5199:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5210:4:21",
                "type": ""
              }
            ],
            "src": "5117:222:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5416:51:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5426:35:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5455:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5437:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5437:24:21"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5426:7:21"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_baseFractionToken_$3833",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5398:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5408:7:21",
                "type": ""
              }
            ],
            "src": "5345:122:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5542:105:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5625:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5634:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5637:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5627:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5627:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5627:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5565:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5616:5:21"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_baseFractionToken_$3833",
                              "nodeType": "YulIdentifier",
                              "src": "5572:43:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5572:50:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5562:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5562:61:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5555:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5555:69:21"
                  },
                  "nodeType": "YulIf",
                  "src": "5552:89:21"
                }
              ]
            },
            "name": "validator_revert_t_contract$_baseFractionToken_$3833",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5535:5:21",
                "type": ""
              }
            ],
            "src": "5473:174:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5731:113:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5741:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5763:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5750:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5741:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5832:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_baseFractionToken_$3833",
                      "nodeType": "YulIdentifier",
                      "src": "5779:52:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5779:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5779:59:21"
                }
              ]
            },
            "name": "abi_decode_t_contract$_baseFractionToken_$3833",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5709:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5717:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5725:5:21",
                "type": ""
              }
            ],
            "src": "5653:191:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5942:289:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5988:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5990:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5990:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5990:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5963:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5972:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5959:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5959:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5984:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5955:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5955:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "5952:119:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6081:143:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6096:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6110:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6100:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6125:89:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6186:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6197:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6182:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6182:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6206:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_baseFractionToken_$3833",
                          "nodeType": "YulIdentifier",
                          "src": "6135:46:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6135:79:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6125:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_baseFractionToken_$3833",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5912:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5923:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5935:6:21",
                "type": ""
              }
            ],
            "src": "5850:381:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6302:53:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6319:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6342:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6324:17:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:24:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6312:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6312:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6312:37:21"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6290:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6297:3:21",
                "type": ""
              }
            ],
            "src": "6237:118:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6459:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6469:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6481:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6492:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6477:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6477:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6469:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6549:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6562:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6573:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6558:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6558:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6505:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6505:71:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6505:71:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6431:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6443:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6454:4:21",
                "type": ""
              }
            ],
            "src": "6361:222:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6672:391:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6718:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6720:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6720:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6720:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6693:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6702:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6689:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6689:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6714:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6685:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6685:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6682:119:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6811:117:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6826:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6840:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6830:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6855:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6890:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6901:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6886:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6886:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6910:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6865:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6865:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6855:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6938:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6953:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6967:2:21",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6957:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6983:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7018:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7029:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7014:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7014:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7038:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6993:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6993:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6983:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6634:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6645:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6657:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6665:6:21",
                "type": ""
              }
            ],
            "src": "6589:474:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7158:28:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7175:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7178:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7168:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:12:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7168:12:21"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "7069:117:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7240:54:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7250:38:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7268:5:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7275:2:21",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7264:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7264:14:21"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7284:2:21",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7280:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7280:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7260:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:28:21"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7250:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7223:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7233:6:21",
                "type": ""
              }
            ],
            "src": "7192:102:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:152:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7345:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7348:77:21",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7338:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7338:88:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7338:88:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7442:1:21",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7445:4:21",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7435:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7435:15:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7466:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7469:4:21",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7459:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7459:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7459:15:21"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7300:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7529:238:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7539:58:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7561:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7591:4:21"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7569:21:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7569:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7557:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7557:40:21"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7543:10:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7708:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7710:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7710:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7710:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7651:10:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7663:18:21",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7648:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7648:34:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7687:10:21"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7699:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7684:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7684:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7645:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7645:62:21"
                  },
                  "nodeType": "YulIf",
                  "src": "7642:88:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7746:2:21",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7750:10:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7739:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7739:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7739:22:21"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7515:6:21",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7523:4:21",
                "type": ""
              }
            ],
            "src": "7486:281:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7814:88:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7824:30:21",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "7834:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7834:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7824:6:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7883:6:21"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7891:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "7863:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7863:33:21"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7798:4:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7807:6:21",
                "type": ""
              }
            ],
            "src": "7773:129:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7975:241:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8080:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8082:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8082:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8082:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8052:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8060:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8049:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8049:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "8046:56:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8112:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8142:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "8120:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8120:29:21"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8112:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8186:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8198:4:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8204:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8194:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8194:15:21"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8186:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7959:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7970:4:21",
                "type": ""
              }
            ],
            "src": "7908:308:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8273:103:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8296:3:21"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8301:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8306:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "8283:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8283:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8283:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "8354:3:21"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8359:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8350:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8350:16:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8368:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8343:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8343:27:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8343:27:21"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8255:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8260:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8265:6:21",
                "type": ""
              }
            ],
            "src": "8222:154:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8466:328:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8476:75:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8543:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8501:41:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8501:49:21"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8485:15:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:66:21"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "8476:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "8567:5:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8574:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8560:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8560:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8560:21:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8590:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "8605:5:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8612:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8601:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8601:16:21"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "8594:3:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8655:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "8657:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8657:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8657:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "8636:3:21"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8641:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8632:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8632:16:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "8650:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8629:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:25:21"
                  },
                  "nodeType": "YulIf",
                  "src": "8626:112:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8771:3:21"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8776:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8781:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8747:23:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8747:41:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8747:41:21"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8439:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8444:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8452:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8460:5:21",
                "type": ""
              }
            ],
            "src": "8382:412:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8876:278:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8925:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "8927:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8927:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8927:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8904:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8912:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8900:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8900:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "8919:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8896:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8896:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8889:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8889:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "8886:122:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9017:34:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9044:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9031:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9031:20:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9021:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9060:88:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9121:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9129:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9117:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9117:17:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9136:6:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "9144:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "9069:47:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9069:79:21"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "9060:5:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8854:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8862:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8870:5:21",
                "type": ""
              }
            ],
            "src": "8814:340:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9331:1246:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9378:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9380:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9380:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9380:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9352:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9361:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9348:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9348:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9373:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9344:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9344:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "9341:120:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9471:117:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9486:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9500:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9490:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9515:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9550:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9561:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9546:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9546:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9570:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9525:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9525:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9515:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9598:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9613:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9627:2:21",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9617:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9643:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9678:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9689:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9674:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9674:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9698:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9653:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9653:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9643:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9726:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9741:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9755:2:21",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9745:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9771:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9806:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9817:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9802:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9802:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9826:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9781:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9781:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "9771:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9854:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9869:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9883:2:21",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9873:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9899:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9934:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9945:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9930:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9930:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9954:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9909:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9909:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "9899:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9982:289:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9997:47:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10028:9:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10039:3:21",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10024:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10024:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10011:12:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10011:33:21"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10001:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10091:83:21",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "10093:77:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10093:79:21"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10093:79:21"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10063:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10071:18:21",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10060:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10060:30:21"
                      },
                      "nodeType": "YulIf",
                      "src": "10057:117:21"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10188:73:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10233:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10244:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10229:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10229:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10253:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "10198:30:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10198:63:21"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "10188:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10281:289:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10296:47:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10327:9:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10338:3:21",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10323:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10323:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10310:12:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10310:33:21"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10300:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10390:83:21",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "10392:77:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10392:79:21"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10392:79:21"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10362:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10370:18:21",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10359:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10359:30:21"
                      },
                      "nodeType": "YulIf",
                      "src": "10356:117:21"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10487:73:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10532:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10543:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10528:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10528:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10552:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "10497:30:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10497:63:21"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "10487:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9261:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9272:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9284:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9292:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9300:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9308:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9316:6:21",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9324:6:21",
                "type": ""
              }
            ],
            "src": "9160:1417:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10698:534:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10744:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10746:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10746:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10746:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10719:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10728:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10715:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10715:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10740:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10711:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10711:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "10708:119:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10837:132:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10852:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10866:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10856:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10881:78:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10931:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10942:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10927:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10927:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10951:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC721_$1743",
                          "nodeType": "YulIdentifier",
                          "src": "10891:35:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10891:68:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10881:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10979:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10994:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11008:2:21",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10998:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11024:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11059:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11070:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11055:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11055:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11079:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11034:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11034:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "11024:6:21"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11107:118:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11122:16:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11136:2:21",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11126:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11152:63:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11187:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11198:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11183:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11183:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11207:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "11162:20:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11162:53:21"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "11152:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC721_$1743t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10652:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10663:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10675:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10683:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10691:6:21",
                "type": ""
              }
            ],
            "src": "10583:649:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11334:73:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11351:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11356:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11344:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11344:19:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11344:19:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11372:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11391:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11396:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11387:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11387:14:21"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11372:11:21"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11306:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11311:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11322:11:21",
                "type": ""
              }
            ],
            "src": "11238:169:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11519:114:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11541:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11549:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11537:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11537:14:21"
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e46",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11553:34:21",
                        "type": "",
                        "value": "You are not the owner of this NF"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11530:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11530:58:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11530:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11609:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11617:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11605:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11605:15:21"
                      },
                      {
                        "hexValue": "54",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11622:3:21",
                        "type": "",
                        "value": "T"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11598:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11598:28:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11598:28:21"
                }
              ]
            },
            "name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11511:6:21",
                "type": ""
              }
            ],
            "src": "11413:220:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11785:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11795:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11861:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11866:2:21",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11802:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11802:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11795:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11967:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
                      "nodeType": "YulIdentifier",
                      "src": "11878:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11878:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11878:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11980:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11991:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11996:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11987:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11987:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11980:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11773:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11781:3:21",
                "type": ""
              }
            ],
            "src": "11639:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12182:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12192:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12204:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12215:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12200:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12200:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12192:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12239:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12250:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12235:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12235:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12258:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12264:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12254:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12254:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12228:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12228:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12228:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12284:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12418:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12292:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12292:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12284:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12162:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12177:4:21",
                "type": ""
              }
            ],
            "src": "12011:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12590:288:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12600:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12612:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12623:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12608:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12608:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12600:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12680:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12693:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12704:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12689:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12689:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12636:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:71:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12636:71:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12761:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12774:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12785:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12770:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12770:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12717:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12717:72:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12717:72:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12843:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12856:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12867:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12852:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12852:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12799:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12799:72:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12799:72:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12546:9:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12558:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12566:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12574:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12585:4:21",
                "type": ""
              }
            ],
            "src": "12436:442:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12990:115:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13012:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13020:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13008:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13008:14:21"
                      },
                      {
                        "hexValue": "54686973204e4654206861736e2774206265656e206465706f73697465642079",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13024:34:21",
                        "type": "",
                        "value": "This NFT hasn't been deposited y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13001:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13001:58:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13001:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13080:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13088:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13076:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13076:15:21"
                      },
                      {
                        "hexValue": "6574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13093:4:21",
                        "type": "",
                        "value": "et"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13069:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13069:29:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13069:29:21"
                }
              ]
            },
            "name": "store_literal_in_memory_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12982:6:21",
                "type": ""
              }
            ],
            "src": "12884:221:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13257:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13267:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13333:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13338:2:21",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13274:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13274:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13267:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13439:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
                      "nodeType": "YulIdentifier",
                      "src": "13350:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13350:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13350:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13452:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13463:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13468:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13459:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13459:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13452:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13245:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13253:3:21",
                "type": ""
              }
            ],
            "src": "13111:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13654:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13664:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13676:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13687:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13672:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13672:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13664:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13711:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13722:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13707:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13707:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13730:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13736:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13726:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13726:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13700:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13700:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13700:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13756:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13890:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13764:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13764:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13756:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13634:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13649:4:21",
                "type": ""
              }
            ],
            "src": "13483:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14014:67:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14036:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14044:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14032:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14032:14:21"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973204e4654",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14048:25:21",
                        "type": "",
                        "value": "You do not own this NFT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14025:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14025:49:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14025:49:21"
                }
              ]
            },
            "name": "store_literal_in_memory_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14006:6:21",
                "type": ""
              }
            ],
            "src": "13908:173:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14233:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14243:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14309:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14314:2:21",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14250:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14250:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14243:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14415:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                      "nodeType": "YulIdentifier",
                      "src": "14326:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14326:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14326:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14428:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14439:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14444:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14435:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14435:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14428:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14221:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14229:3:21",
                "type": ""
              }
            ],
            "src": "14087:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14630:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14640:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14652:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14663:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14648:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14648:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14640:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14687:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14698:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14683:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14683:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14706:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14712:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14702:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14702:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14676:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14676:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14676:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14732:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14866:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14740:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14740:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14732:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14610:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14625:4:21",
                "type": ""
              }
            ],
            "src": "14459:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14916:28:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14926:12:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14933:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14926:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14902:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14912:3:21",
                "type": ""
              }
            ],
            "src": "14884:60:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15010:82:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15020:66:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15078:5:21"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "15060:17:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15060:24:21"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "15051:8:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15051:34:21"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15033:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15033:53:21"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15020:9:21"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14990:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15000:9:21",
                "type": ""
              }
            ],
            "src": "14950:142:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15158:66:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15168:50:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15212:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15181:30:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15181:37:21"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15168:9:21"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15138:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15148:9:21",
                "type": ""
              }
            ],
            "src": "15098:126:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15305:66:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15315:50:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15359:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "15328:30:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15328:37:21"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15315:9:21"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC721_$1743_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15285:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15295:9:21",
                "type": ""
              }
            ],
            "src": "15230:141:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15457:81:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15474:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15525:5:21"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC721_$1743_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "15479:45:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15479:52:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15467:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15467:65:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15467:65:21"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC721_$1743_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15445:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15452:3:21",
                "type": ""
              }
            ],
            "src": "15377:161:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15603:40:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15614:22:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15630:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15624:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15624:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "15614:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15586:5:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15596:6:21",
                "type": ""
              }
            ],
            "src": "15544:99:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15698:258:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15708:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15717:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "15712:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15777:63:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15802:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "15807:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15798:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15798:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "15821:3:21"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "15826:1:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15817:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15817:11:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "15811:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15811:18:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15791:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15791:39:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15791:39:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15738:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15741:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15735:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15735:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15749:19:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15751:15:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "15760:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15763:2:21",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15756:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15756:10:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15751:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15731:3:21",
                    "statements": []
                  },
                  "src": "15727:113:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15874:76:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15924:3:21"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15929:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15920:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15920:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15938:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15913:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15913:27:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15913:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15855:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15858:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15852:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15852:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "15849:101:21"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "15680:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "15685:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15690:6:21",
                "type": ""
              }
            ],
            "src": "15649:307:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16054:272:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16064:53:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16111:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "16078:32:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16078:39:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "16068:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16126:78:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16192:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16197:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16133:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16133:71:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16126:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16239:5:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16246:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16235:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16235:16:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16253:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16258:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "16213:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16213:52:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16213:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16274:46:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16285:3:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16312:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "16290:21:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16290:29:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16281:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16281:39:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16274:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16035:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16042:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16050:3:21",
                "type": ""
              }
            ],
            "src": "15962:364:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16681:860:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16691:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16703:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16714:3:21",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16699:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16699:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16691:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16787:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16800:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16811:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16796:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16796:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC721_$1743_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16728:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16728:86:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16728:86:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16868:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16881:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16892:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16877:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16877:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16824:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16824:72:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16824:72:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16950:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16963:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16974:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16959:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16959:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16906:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16906:72:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16906:72:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16999:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17010:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16995:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16995:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17019:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17025:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17015:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17015:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16988:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16988:48:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16988:48:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17045:86:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17117:6:21"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17126:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17053:63:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17053:78:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17045:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17152:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17163:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17148:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17148:19:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17173:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17179:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17169:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17169:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17141:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17141:49:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17141:49:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17199:86:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "17271:6:21"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17280:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17207:63:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17207:78:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17199:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "17339:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17352:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17363:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17348:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17348:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17295:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17295:73:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17295:73:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "17422:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17435:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17446:3:21",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17431:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17431:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17378:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17378:73:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17378:73:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "17505:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17518:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17529:3:21",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17514:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17514:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17461:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17461:73:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17461:73:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721_$1743_t_uint256_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16597:9:21",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "16609:6:21",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "16617:6:21",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "16625:6:21",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "16633:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16641:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16649:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16657:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16665:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16676:4:21",
                "type": ""
              }
            ],
            "src": "16332:1209:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17653:69:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17675:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17683:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17671:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17671:14:21"
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f742077697468647261776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17687:27:21",
                        "type": "",
                        "value": "This NFT is not withdrawn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17664:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17664:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17664:51:21"
                }
              ]
            },
            "name": "store_literal_in_memory_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17645:6:21",
                "type": ""
              }
            ],
            "src": "17547:175:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17874:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17884:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17950:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17955:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17891:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17891:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17884:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18056:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
                      "nodeType": "YulIdentifier",
                      "src": "17967:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17967:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17967:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18069:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18080:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18085:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18076:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18076:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18069:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17862:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17870:3:21",
                "type": ""
              }
            ],
            "src": "17728:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18271:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18281:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18293:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18304:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18289:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18289:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18281:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18328:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18339:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18324:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18324:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18347:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18353:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18343:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18343:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18317:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18317:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18317:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18373:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18507:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18381:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18381:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18373:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18251:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18266:4:21",
                "type": ""
              }
            ],
            "src": "18100:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18588:80:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18598:22:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "18613:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18607:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18607:13:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "18598:5:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18656:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18629:26:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18629:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18629:33:21"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "18566:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18574:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18582:5:21",
                "type": ""
              }
            ],
            "src": "18525:143:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18751:274:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18797:83:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "18799:77:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18799:79:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18799:79:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18772:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18781:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18768:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18768:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18793:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18764:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18764:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "18761:119:21"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "18890:128:21",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18905:15:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18919:1:21",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18909:6:21",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18934:74:21",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18980:9:21"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18991:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18976:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18976:22:21"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19000:7:21"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18944:31:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18944:64:21"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "18934:6:21"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18721:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18732:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18744:6:21",
                "type": ""
              }
            ],
            "src": "18674:351:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19137:266:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19159:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19167:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19155:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19155:14:21"
                      },
                      {
                        "hexValue": "4e46542063616e6e6f742062652077697468647261776e2c2065746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19171:34:21",
                        "type": "",
                        "value": "NFT cannot be withdrawn, ether t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19148:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19148:58:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19148:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19227:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19235:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19223:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19223:15:21"
                      },
                      {
                        "hexValue": "6865204e465420686173206265656e2077697468647261776e206f7220796f75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19240:34:21",
                        "type": "",
                        "value": "he NFT has been withdrawn or you"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19216:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19216:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19216:59:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19296:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19304:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19292:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19292:15:21"
                      },
                      {
                        "hexValue": "20646f206e6f74206f776e2074686520746f74616c20737570706c79206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19309:34:21",
                        "type": "",
                        "value": " do not own the total supply of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19285:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19285:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19285:59:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19365:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19373:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19361:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19361:15:21"
                      },
                      {
                        "hexValue": "6672616374696f6e20746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19378:17:21",
                        "type": "",
                        "value": "fraction tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19354:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19354:42:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19354:42:21"
                }
              ]
            },
            "name": "store_literal_in_memory_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19129:6:21",
                "type": ""
              }
            ],
            "src": "19031:372:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19555:222:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19565:75:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19631:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19636:3:21",
                        "type": "",
                        "value": "111"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19572:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19572:68:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19565:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19738:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
                      "nodeType": "YulIdentifier",
                      "src": "19649:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19649:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19649:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19751:20:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19762:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19767:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19758:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19758:13:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19751:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19543:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19551:3:21",
                "type": ""
              }
            ],
            "src": "19409:368:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19954:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19964:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19976:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19987:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19972:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19972:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19964:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20011:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20022:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20007:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20007:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20030:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20036:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20026:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20026:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20000:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20000:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20000:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20056:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20190:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20064:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20064:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20056:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19934:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19949:4:21",
                "type": ""
              }
            ],
            "src": "19783:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20314:69:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20336:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20344:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20332:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20332:14:21"
                      },
                      {
                        "hexValue": "4e6674206973206e6f74206368616e67696e67206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20348:27:21",
                        "type": "",
                        "value": "Nft is not changing owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20325:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20325:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20325:51:21"
                }
              ]
            },
            "name": "store_literal_in_memory_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20306:6:21",
                "type": ""
              }
            ],
            "src": "20208:175:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20535:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20545:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20611:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20616:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20552:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20552:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20545:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20717:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
                      "nodeType": "YulIdentifier",
                      "src": "20628:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20628:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20628:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20730:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20741:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20746:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20737:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20737:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20730:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20523:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20531:3:21",
                "type": ""
              }
            ],
            "src": "20389:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20932:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20942:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20954:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20965:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20950:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20950:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20942:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20989:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21000:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20985:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20985:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21008:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21014:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21004:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21004:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20978:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20978:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20978:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21034:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21168:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21042:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21042:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21034:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20912:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20927:4:21",
                "type": ""
              }
            ],
            "src": "20761:419:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21292:127:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21314:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21322:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21310:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21310:14:21"
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572206f66204e46542063616e206368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21326:34:21",
                        "type": "",
                        "value": "Only current owner of NFT can ch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21303:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21303:58:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21303:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21382:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21390:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21378:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21378:15:21"
                      },
                      {
                        "hexValue": "616e6765204e4654206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21395:16:21",
                        "type": "",
                        "value": "ange NFT owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21371:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21371:41:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21371:41:21"
                }
              ]
            },
            "name": "store_literal_in_memory_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21284:6:21",
                "type": ""
              }
            ],
            "src": "21186:233:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21571:220:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21581:74:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21647:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21652:2:21",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21588:58:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21588:67:21"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21581:3:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21753:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
                      "nodeType": "YulIdentifier",
                      "src": "21664:88:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21664:93:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21664:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21766:19:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21777:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21782:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21773:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21773:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21766:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21559:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21567:3:21",
                "type": ""
              }
            ],
            "src": "21425:366:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21968:248:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21978:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21990:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22001:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21986:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21986:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21978:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22025:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22036:1:21",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22021:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22021:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22044:4:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22050:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22040:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22040:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22014:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22014:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22014:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22070:139:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22204:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22078:124:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22078:131:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22070:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21948:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21963:4:21",
                "type": ""
              }
            ],
            "src": "21797:419:21"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_ERC721_$1743(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC721_$1743(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC721_$1743(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC721_$1743(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC721_$1743(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC721_$1743t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC721_$1743(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_baseFractionToken_$3833(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_baseFractionToken_$3833(value) {\n        if iszero(eq(value, cleanup_t_contract$_baseFractionToken_$3833(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_baseFractionToken_$3833(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_baseFractionToken_$3833(value)\n    }\n\n    function abi_decode_tuple_t_contract$_baseFractionToken_$3833(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_baseFractionToken_$3833(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC721_$1743t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC721_$1743(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT hasn't been deposited y\")\n\n        mstore(add(memPtr, 32), \"et\")\n\n    }\n\n    function abi_encode_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not own this NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC721_$1743_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC721_$1743_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC721_$1743_to_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC721_$1743_t_uint256_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_contract$_ERC721_$1743_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function store_literal_in_memory_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT is not withdrawn\")\n\n    }\n\n    function abi_encode_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT cannot be withdrawn, ether t\")\n\n        mstore(add(memPtr, 32), \"he NFT has been withdrawn or you\")\n\n        mstore(add(memPtr, 64), \" do not own the total supply of \")\n\n        mstore(add(memPtr, 96), \"fraction tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 111)\n        store_literal_in_memory_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69(pos)\n        end := add(pos, 128)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nft is not changing owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only current owner of NFT can ch\")\n\n        mstore(add(memPtr, 32), \"ange NFT owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "256:5470:20:-:0;;;794:62;;;;;;;;;;838:10;819:16;;:29;;;;;;;;;;;;;;;;;;256:5470;;;;;;",
  "deployedSourceMap": "256:5470:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5410:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5031:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4117:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5183:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4557:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1761:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4394:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4247:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4719:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2113:1286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4889:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:697;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1414:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:380;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5410:313;5559:6;5674:41;;;5667:48;;5410:313;;;;;;;:::o;5031:144::-;5110:4;5134:19;:25;5154:4;5134:25;;;;;;;;;;;;;;;:33;5160:6;5134:33;;;;;;;;;;;;;;;;;;;;;5127:40;;5031:144;;;;:::o;4117:124::-;4184:7;4211:8;:14;4220:4;4211:14;;;;;;;;;;;;;;;:22;4226:6;4211:22;;;;;;;;;;;;;;;;;;;;;4204:29;;4117:124;;;;:::o;5183:219::-;5284:8;:14;5293:4;5284:14;;;;;;;;;;;;;;;:22;5299:6;5284:22;;;;;;;;;;;;;;;;;;;;;5270:36;;:10;:36;;;5262:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;5390:4;5355:18;:24;5374:4;5355:24;;;;;;;;;;;;;;;:32;5380:6;5355:32;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;5183:219;;:::o;4557:150::-;4642:4;4666:17;:33;4684:14;4666:33;;;;;;;;;;;;;;;;4659:40;;4557:150;;;:::o;1761:344::-;1895:10;1915:19;1895:40;;1946:3;:20;;;1967:10;1987:4;1994:6;1946:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2048:4;2018:14;:19;2033:3;2018:19;;;;;;;;;;;;;;;:27;2038:6;2018:27;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2087:10;2063:8;:13;2072:3;2063:13;;;;;;;;;;;;;;;:21;2077:6;2063:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1833:272;1761:344;;:::o;4394:157::-;4475:7;4502:27;:33;4530:4;4502:33;;;;;;;;;;;;;;;:41;4536:6;4502:41;;;;;;;;;;;;;;;;;;;;;4495:48;;4394:157;;;;:::o;4247:141::-;4324:4;4348:18;:24;4367:4;4348:24;;;;;;;;;;;;;;;:32;4373:6;4348:32;;;;;;;;;;;;;;;;;;;;;4341:39;;4247:141;;;;:::o;4719:162::-;4808:7;4835:22;:38;4858:14;4835:38;;;;;;;;;;;;;;;;;;;;;;;;;4828:45;;4719:162;;;:::o;2113:1286::-;2360:10;2380:19;2360:40;;2419:14;:19;2434:3;2419:19;;;;;;;;;;;;;;;:27;2439:6;2419:27;;;;;;;;;;;;;;;;;;;;;2411:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2529:10;2504:35;;:8;:13;2513:3;2504:13;;;;;;;;;;;;;;;:21;2518:6;2504:21;;;;;;;;;;;;;;;;;;;;;:35;;;2496:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2615:4;2580:19;:24;2600:3;2580:24;;;;;;;;;;;;;;;:32;2605:6;2580:32;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2632:31;2688:3;2758:6;2831:10;2908;2985:12;3064:7;3202:18;3296:4;2666:646;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2632:680;;3377:13;3325:27;:32;3353:3;3325:32;;;;;;;;;;;;;;;:40;3358:6;3325:40;;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;2349:1050;;2113:1286;;;;;;:::o;4889:134::-;4963:4;4987:14;:20;5002:4;4987:20;;;;;;;;;;;;;;;:28;5008:6;4987:28;;;;;;;;;;;;;;;;;;;;;4980:35;;4889:134;;;;:::o;3408:697::-;3492:10;3512:19;3492:40;;3543:31;3595:27;:32;3623:3;3595:32;;;;;;;;;;;;;;;:40;3628:6;3595:40;;;;;;;;;;;;;;;;;;;;;3543:93;;3696:4;3665:35;;:14;:19;3680:3;3665:19;;;;;;;;;;;;;;;:27;3685:6;3665:27;;;;;;;;;;;;;;;;;;;;;:35;;;3657:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3785:5;3749:41;;:19;:24;3769:3;3749:24;;;;;;;;;;;;;;;:32;3774:6;3749:32;;;;;;;;;;;;;;;;;;;;;:41;;;:128;;;;3850:13;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3811:13;:23;;;3835:10;3811:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;3749:128;3741:288;;;;;;;;;;;;:::i;:::-;;;;;;;;;4042:3;:20;;;4071:4;4078:10;4090:6;4042:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3481:624;;3408:697;;:::o;1414:339::-;1481:4;1498:17;1518:14;:20;1533:4;1518:20;;;;;;;;;;;;;;;:28;1539:6;1518:28;;;;;;;;;;;;;;;;;;;;;1498:48;;1557:21;1581:19;:25;1601:4;1581:25;;;;;;;;;;;;;;;:33;1607:6;1581:33;;;;;;;;;;;;;;;;;;;;;1557:57;;1629:12;:32;;;;;1645:16;1629:32;1625:121;;;1685:4;1678:11;;;;;;1625:121;1729:5;1722:12;;;;1414:339;;;;;:::o;1026:380::-;1153:4;1117:40;;:18;:24;1136:4;1117:24;;;;;;;;;;;;;;;:32;1142:6;1117:32;;;;;;;;;;;;;;;;;;;;;:40;;;1109:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1220:8;:14;1229:4;1220:14;;;;;;;;;;;;;;;:22;1235:6;1220:22;;;;;;;;;;;;;;;;;;;;;1206:36;;:10;:36;;;1198:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1349:5;1314:18;:24;1333:4;1314:24;;;;;;;;;;;;;;;:32;1339:6;1314:32;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1390:8;1365;:14;1374:4;1365:14;;;;;;;;;;;;;;;:22;1380:6;1365:22;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1026:380;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:111::-;3658:7;3687:24;3705:5;3687:24;:::i;:::-;3676:35;;3606:111;;;:::o;3723:152::-;3811:39;3844:5;3811:39;:::i;:::-;3804:5;3801:50;3791:78;;3865:1;3862;3855:12;3791:78;3723:152;:::o;3881:169::-;3942:5;3980:6;3967:20;3958:29;;3996:48;4038:5;3996:48;:::i;:::-;3881:169;;;;:::o;4056:504::-;4139:6;4147;4196:2;4184:9;4175:7;4171:23;4167:32;4164:119;;;4202:79;;:::i;:::-;4164:119;4322:1;4347:68;4407:7;4398:6;4387:9;4383:22;4347:68;:::i;:::-;4337:78;;4293:132;4464:2;4490:53;4535:7;4526:6;4515:9;4511:22;4490:53;:::i;:::-;4480:63;;4435:118;4056:504;;;;;:::o;4566:90::-;4600:7;4643:5;4636:13;4629:21;4618:32;;4566:90;;;:::o;4662:109::-;4743:21;4758:5;4743:21;:::i;:::-;4738:3;4731:34;4662:109;;:::o;4777:210::-;4864:4;4902:2;4891:9;4887:18;4879:26;;4915:65;4977:1;4966:9;4962:17;4953:6;4915:65;:::i;:::-;4777:210;;;;:::o;4993:118::-;5080:24;5098:5;5080:24;:::i;:::-;5075:3;5068:37;4993:118;;:::o;5117:222::-;5210:4;5248:2;5237:9;5233:18;5225:26;;5261:71;5329:1;5318:9;5314:17;5305:6;5261:71;:::i;:::-;5117:222;;;;:::o;5345:122::-;5408:7;5437:24;5455:5;5437:24;:::i;:::-;5426:35;;5345:122;;;:::o;5473:174::-;5572:50;5616:5;5572:50;:::i;:::-;5565:5;5562:61;5552:89;;5637:1;5634;5627:12;5552:89;5473:174;:::o;5653:191::-;5725:5;5763:6;5750:20;5741:29;;5779:59;5832:5;5779:59;:::i;:::-;5653:191;;;;:::o;5850:381::-;5935:6;5984:2;5972:9;5963:7;5959:23;5955:32;5952:119;;;5990:79;;:::i;:::-;5952:119;6110:1;6135:79;6206:7;6197:6;6186:9;6182:22;6135:79;:::i;:::-;6125:89;;6081:143;5850:381;;;;:::o;6237:118::-;6324:24;6342:5;6324:24;:::i;:::-;6319:3;6312:37;6237:118;;:::o;6361:222::-;6454:4;6492:2;6481:9;6477:18;6469:26;;6505:71;6573:1;6562:9;6558:17;6549:6;6505:71;:::i;:::-;6361:222;;;;:::o;6589:474::-;6657:6;6665;6714:2;6702:9;6693:7;6689:23;6685:32;6682:119;;;6720:79;;:::i;:::-;6682:119;6840:1;6865:53;6910:7;6901:6;6890:9;6886:22;6865:53;:::i;:::-;6855:63;;6811:117;6967:2;6993:53;7038:7;7029:6;7018:9;7014:22;6993:53;:::i;:::-;6983:63;;6938:118;6589:474;;;;;:::o;7069:117::-;7178:1;7175;7168:12;7192:102;7233:6;7284:2;7280:7;7275:2;7268:5;7264:14;7260:28;7250:38;;7192:102;;;:::o;7300:180::-;7348:77;7345:1;7338:88;7445:4;7442:1;7435:15;7469:4;7466:1;7459:15;7486:281;7569:27;7591:4;7569:27;:::i;:::-;7561:6;7557:40;7699:6;7687:10;7684:22;7663:18;7651:10;7648:34;7645:62;7642:88;;;7710:18;;:::i;:::-;7642:88;7750:10;7746:2;7739:22;7529:238;7486:281;;:::o;7773:129::-;7807:6;7834:20;;:::i;:::-;7824:30;;7863:33;7891:4;7883:6;7863:33;:::i;:::-;7773:129;;;:::o;7908:308::-;7970:4;8060:18;8052:6;8049:30;8046:56;;;8082:18;;:::i;:::-;8046:56;8120:29;8142:6;8120:29;:::i;:::-;8112:37;;8204:4;8198;8194:15;8186:23;;7908:308;;;:::o;8222:154::-;8306:6;8301:3;8296;8283:30;8368:1;8359:6;8354:3;8350:16;8343:27;8222:154;;;:::o;8382:412::-;8460:5;8485:66;8501:49;8543:6;8501:49;:::i;:::-;8485:66;:::i;:::-;8476:75;;8574:6;8567:5;8560:21;8612:4;8605:5;8601:16;8650:3;8641:6;8636:3;8632:16;8629:25;8626:112;;;8657:79;;:::i;:::-;8626:112;8747:41;8781:6;8776:3;8771;8747:41;:::i;:::-;8466:328;8382:412;;;;;:::o;8814:340::-;8870:5;8919:3;8912:4;8904:6;8900:17;8896:27;8886:122;;8927:79;;:::i;:::-;8886:122;9044:6;9031:20;9069:79;9144:3;9136:6;9129:4;9121:6;9117:17;9069:79;:::i;:::-;9060:88;;8876:278;8814:340;;;;:::o;9160:1417::-;9284:6;9292;9300;9308;9316;9324;9373:3;9361:9;9352:7;9348:23;9344:33;9341:120;;;9380:79;;:::i;:::-;9341:120;9500:1;9525:53;9570:7;9561:6;9550:9;9546:22;9525:53;:::i;:::-;9515:63;;9471:117;9627:2;9653:53;9698:7;9689:6;9678:9;9674:22;9653:53;:::i;:::-;9643:63;;9598:118;9755:2;9781:53;9826:7;9817:6;9806:9;9802:22;9781:53;:::i;:::-;9771:63;;9726:118;9883:2;9909:53;9954:7;9945:6;9934:9;9930:22;9909:53;:::i;:::-;9899:63;;9854:118;10039:3;10028:9;10024:19;10011:33;10071:18;10063:6;10060:30;10057:117;;;10093:79;;:::i;:::-;10057:117;10198:63;10253:7;10244:6;10233:9;10229:22;10198:63;:::i;:::-;10188:73;;9982:289;10338:3;10327:9;10323:19;10310:33;10370:18;10362:6;10359:30;10356:117;;;10392:79;;:::i;:::-;10356:117;10497:63;10552:7;10543:6;10532:9;10528:22;10497:63;:::i;:::-;10487:73;;10281:289;9160:1417;;;;;;;;:::o;10583:649::-;10675:6;10683;10691;10740:2;10728:9;10719:7;10715:23;10711:32;10708:119;;;10746:79;;:::i;:::-;10708:119;10866:1;10891:68;10951:7;10942:6;10931:9;10927:22;10891:68;:::i;:::-;10881:78;;10837:132;11008:2;11034:53;11079:7;11070:6;11059:9;11055:22;11034:53;:::i;:::-;11024:63;;10979:118;11136:2;11162:53;11207:7;11198:6;11187:9;11183:22;11162:53;:::i;:::-;11152:63;;11107:118;10583:649;;;;;:::o;11238:169::-;11322:11;11356:6;11351:3;11344:19;11396:4;11391:3;11387:14;11372:29;;11238:169;;;;:::o;11413:220::-;11553:34;11549:1;11541:6;11537:14;11530:58;11622:3;11617:2;11609:6;11605:15;11598:28;11413:220;:::o;11639:366::-;11781:3;11802:67;11866:2;11861:3;11802:67;:::i;:::-;11795:74;;11878:93;11967:3;11878:93;:::i;:::-;11996:2;11991:3;11987:12;11980:19;;11639:366;;;:::o;12011:419::-;12177:4;12215:2;12204:9;12200:18;12192:26;;12264:9;12258:4;12254:20;12250:1;12239:9;12235:17;12228:47;12292:131;12418:4;12292:131;:::i;:::-;12284:139;;12011:419;;;:::o;12436:442::-;12585:4;12623:2;12612:9;12608:18;12600:26;;12636:71;12704:1;12693:9;12689:17;12680:6;12636:71;:::i;:::-;12717:72;12785:2;12774:9;12770:18;12761:6;12717:72;:::i;:::-;12799;12867:2;12856:9;12852:18;12843:6;12799:72;:::i;:::-;12436:442;;;;;;:::o;12884:221::-;13024:34;13020:1;13012:6;13008:14;13001:58;13093:4;13088:2;13080:6;13076:15;13069:29;12884:221;:::o;13111:366::-;13253:3;13274:67;13338:2;13333:3;13274:67;:::i;:::-;13267:74;;13350:93;13439:3;13350:93;:::i;:::-;13468:2;13463:3;13459:12;13452:19;;13111:366;;;:::o;13483:419::-;13649:4;13687:2;13676:9;13672:18;13664:26;;13736:9;13730:4;13726:20;13722:1;13711:9;13707:17;13700:47;13764:131;13890:4;13764:131;:::i;:::-;13756:139;;13483:419;;;:::o;13908:173::-;14048:25;14044:1;14036:6;14032:14;14025:49;13908:173;:::o;14087:366::-;14229:3;14250:67;14314:2;14309:3;14250:67;:::i;:::-;14243:74;;14326:93;14415:3;14326:93;:::i;:::-;14444:2;14439:3;14435:12;14428:19;;14087:366;;;:::o;14459:419::-;14625:4;14663:2;14652:9;14648:18;14640:26;;14712:9;14706:4;14702:20;14698:1;14687:9;14683:17;14676:47;14740:131;14866:4;14740:131;:::i;:::-;14732:139;;14459:419;;;:::o;14884:60::-;14912:3;14933:5;14926:12;;14884:60;;;:::o;14950:142::-;15000:9;15033:53;15051:34;15060:24;15078:5;15060:24;:::i;:::-;15051:34;:::i;:::-;15033:53;:::i;:::-;15020:66;;14950:142;;;:::o;15098:126::-;15148:9;15181:37;15212:5;15181:37;:::i;:::-;15168:50;;15098:126;;;:::o;15230:141::-;15295:9;15328:37;15359:5;15328:37;:::i;:::-;15315:50;;15230:141;;;:::o;15377:161::-;15479:52;15525:5;15479:52;:::i;:::-;15474:3;15467:65;15377:161;;:::o;15544:99::-;15596:6;15630:5;15624:12;15614:22;;15544:99;;;:::o;15649:307::-;15717:1;15727:113;15741:6;15738:1;15735:13;15727:113;;;15826:1;15821:3;15817:11;15811:18;15807:1;15802:3;15798:11;15791:39;15763:2;15760:1;15756:10;15751:15;;15727:113;;;15858:6;15855:1;15852:13;15849:101;;;15938:1;15929:6;15924:3;15920:16;15913:27;15849:101;15698:258;15649:307;;;:::o;15962:364::-;16050:3;16078:39;16111:5;16078:39;:::i;:::-;16133:71;16197:6;16192:3;16133:71;:::i;:::-;16126:78;;16213:52;16258:6;16253:3;16246:4;16239:5;16235:16;16213:52;:::i;:::-;16290:29;16312:6;16290:29;:::i;:::-;16285:3;16281:39;16274:46;;16054:272;15962:364;;;;:::o;16332:1209::-;16676:4;16714:3;16703:9;16699:19;16691:27;;16728:86;16811:1;16800:9;16796:17;16787:6;16728:86;:::i;:::-;16824:72;16892:2;16881:9;16877:18;16868:6;16824:72;:::i;:::-;16906;16974:2;16963:9;16959:18;16950:6;16906:72;:::i;:::-;17025:9;17019:4;17015:20;17010:2;16999:9;16995:18;16988:48;17053:78;17126:4;17117:6;17053:78;:::i;:::-;17045:86;;17179:9;17173:4;17169:20;17163:3;17152:9;17148:19;17141:49;17207:78;17280:4;17271:6;17207:78;:::i;:::-;17199:86;;17295:73;17363:3;17352:9;17348:19;17339:6;17295:73;:::i;:::-;17378;17446:3;17435:9;17431:19;17422:6;17378:73;:::i;:::-;17461;17529:3;17518:9;17514:19;17505:6;17461:73;:::i;:::-;16332:1209;;;;;;;;;;;:::o;17547:175::-;17687:27;17683:1;17675:6;17671:14;17664:51;17547:175;:::o;17728:366::-;17870:3;17891:67;17955:2;17950:3;17891:67;:::i;:::-;17884:74;;17967:93;18056:3;17967:93;:::i;:::-;18085:2;18080:3;18076:12;18069:19;;17728:366;;;:::o;18100:419::-;18266:4;18304:2;18293:9;18289:18;18281:26;;18353:9;18347:4;18343:20;18339:1;18328:9;18324:17;18317:47;18381:131;18507:4;18381:131;:::i;:::-;18373:139;;18100:419;;;:::o;18525:143::-;18582:5;18613:6;18607:13;18598:22;;18629:33;18656:5;18629:33;:::i;:::-;18525:143;;;;:::o;18674:351::-;18744:6;18793:2;18781:9;18772:7;18768:23;18764:32;18761:119;;;18799:79;;:::i;:::-;18761:119;18919:1;18944:64;19000:7;18991:6;18980:9;18976:22;18944:64;:::i;:::-;18934:74;;18890:128;18674:351;;;;:::o;19031:372::-;19171:34;19167:1;19159:6;19155:14;19148:58;19240:34;19235:2;19227:6;19223:15;19216:59;19309:34;19304:2;19296:6;19292:15;19285:59;19378:17;19373:2;19365:6;19361:15;19354:42;19031:372;:::o;19409:368::-;19551:3;19572:68;19636:3;19631;19572:68;:::i;:::-;19565:75;;19649:93;19738:3;19649:93;:::i;:::-;19767:3;19762;19758:13;19751:20;;19409:368;;;:::o;19783:419::-;19949:4;19987:2;19976:9;19972:18;19964:26;;20036:9;20030:4;20026:20;20022:1;20011:9;20007:17;20000:47;20064:131;20190:4;20064:131;:::i;:::-;20056:139;;19783:419;;;:::o;20208:175::-;20348:27;20344:1;20336:6;20332:14;20325:51;20208:175;:::o;20389:366::-;20531:3;20552:67;20616:2;20611:3;20552:67;:::i;:::-;20545:74;;20628:93;20717:3;20628:93;:::i;:::-;20746:2;20741:3;20737:12;20730:19;;20389:366;;;:::o;20761:419::-;20927:4;20965:2;20954:9;20950:18;20942:26;;21014:9;21008:4;21004:20;21000:1;20989:9;20985:17;20978:47;21042:131;21168:4;21042:131;:::i;:::-;21034:139;;20761:419;;;:::o;21186:233::-;21326:34;21322:1;21314:6;21310:14;21303:58;21395:16;21390:2;21382:6;21378:15;21371:41;21186:233;:::o;21425:366::-;21567:3;21588:67;21652:2;21647:3;21588:67;:::i;:::-;21581:74;;21664:93;21753:3;21664:93;:::i;:::-;21782:2;21777:3;21773:12;21766:19;;21425:366;;;:::o;21797:419::-;21963:4;22001:2;21990:9;21986:18;21978:26;;22050:9;22044:4;22040:20;22036:1;22025:9;22021:17;22014:47;22078:131;22204:4;22078:131;:::i;:::-;22070:139;;21797:419;;;:::o",
  "source": "pragma solidity 0.8.14;\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\r\nimport './FractionToken.sol';\r\n\r\ncontract Storage is IERC721Receiver {\r\n    mapping(ERC721 => mapping(uint => bool)) isNftDeposited;\r\n    mapping(ERC721 => mapping(uint => address)) nftOwner;\r\n    mapping(ERC721 => mapping(uint => bool)) isNftChangingOwner;\r\n\r\n    mapping(ERC721 => mapping(uint => bool)) isNftFractionalised;\r\n    mapping(ERC721 => mapping(uint => address)) fractionTokenAddressFromNft;\r\n    mapping(baseFractionToken => address) nftAddressFromFraction;\r\n    mapping(baseFractionToken => uint) nftIdFromFraction;\r\n\r\n    address contractDeployer;\r\n\r\n    constructor() {\r\n        contractDeployer = msg.sender;\r\n    }\r\n\r\n    modifier contractDeployerOnly {\r\n        require (msg.sender == contractDeployer, \"Only contract deployer can call this function\");\r\n        _;\r\n    }\r\n    \r\n    function setNftOwner(ERC721 _nft, uint _nftId, address newOwner) public {\r\n        require(isNftChangingOwner[_nft][_nftId] == true, \"Nft is not changing owner\");\r\n        require(msg.sender == nftOwner[_nft][_nftId], \"Only current owner of NFT can change NFT owner\");\r\n        \r\n        isNftChangingOwner[_nft][_nftId] = false;\r\n        nftOwner[_nft][_nftId] = newOwner;\r\n    }\r\n\r\n    function isNftActive(ERC721 _nft, uint _nftId) public view returns(bool) {\r\n        bool hasDeposited = isNftDeposited[_nft][_nftId];\r\n        bool hasFractionalise = isNftFractionalised[_nft][_nftId];\r\n        if (hasDeposited && hasFractionalise) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function depositNft(address _nftContractAddress, uint256 _nftId) public {\r\n        // this contract must be approved first\r\n\r\n        ERC721 nft = ERC721(_nftContractAddress);\r\n        nft.safeTransferFrom(msg.sender, address(this), _nftId);\r\n    \r\n        isNftDeposited[nft][_nftId] = true;\r\n        nftOwner[nft][_nftId] = msg.sender;\r\n    }\r\n\r\n    function createFraction(\r\n        address _nftContractAddress,\r\n        uint256 _nftId,\r\n        uint256 _royaltyPercentage,\r\n        uint256 _supply,\r\n        string memory _tokenName,\r\n        string memory _tokenTicker\r\n    ) public {\r\n        ERC721 nft = ERC721(_nftContractAddress);\r\n        require(isNftDeposited[nft][_nftId], \"This NFT hasn't been deposited yet\");\r\n        require(nftOwner[nft][_nftId] == msg.sender, \"You do not own this NFT\");\r\n\r\n        isNftFractionalised[nft][_nftId] = true;\r\n\r\n        baseFractionToken FractionToken = new baseFractionToken(nft,\r\n                                                                _nftId,\r\n                                                                msg.sender,\r\n                                                                _tokenName,\r\n                                                                _tokenTicker,\r\n                                                                _supply,                                                                \r\n                                                                _royaltyPercentage,\r\n                                                                address (this)\r\n        );\r\n\r\n        fractionTokenAddressFromNft[nft][_nftId] = address (FractionToken);\r\n    }\r\n\r\n     function withdrawNft(address _nftContractAddress, uint256 _nftId) public {\r\n        ERC721 nft = ERC721(_nftContractAddress);\r\n        baseFractionToken FractionToken = baseFractionToken(fractionTokenAddressFromNft[nft][_nftId]);\r\n        \r\n        require(isNftDeposited[nft][_nftId] == true, \"This NFT is not withdrawn\");\r\n        require(isNftFractionalised[nft][_nftId] == false ||\r\n                FractionToken.balanceOf(msg.sender) == FractionToken.totalSupply(), \r\n                \"NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens\"\r\n                );\r\n\r\n        nft.safeTransferFrom(address(this), msg.sender, _nftId);\r\n    }\r\n    \r\n    function getNftOwner(ERC721 _nft, uint _nftId) public view returns(address) {\r\n        return nftOwner[_nft][_nftId];\r\n    }\r\n    function getIsChangingNftOwner(ERC721 _nft, uint _nftId) public view returns(bool) {\r\n        return isNftChangingOwner[_nft][_nftId];\r\n    }\r\n    function getFractionAddressFromNft(ERC721 _nft, uint _nftId) public view returns(address) {\r\n        return fractionTokenAddressFromNft[_nft][_nftId];\r\n    }\r\n    function getNftIdFromFraction(baseFractionToken _fractionToken) public view returns (uint) {\r\n        return nftIdFromFraction[_fractionToken];\r\n    }\r\n    \r\n    function getNftAddressFromFraction(baseFractionToken _fractionToken) public view returns(address) {\r\n        return nftAddressFromFraction[_fractionToken];\r\n    }\r\n\r\n    function getIsNftDeposited(ERC721 _nft, uint _nftId) public view returns (bool) {\r\n        return isNftDeposited[_nft][_nftId];\r\n    }\r\n\r\n    function getIsNftFractionalised(ERC721 _nft, uint _nftId) public view returns (bool) {\r\n        return isNftFractionalised[_nft][_nftId];\r\n    }\r\n\r\n    function setIsNftChangingOwnerTrue(ERC721 _nft, uint _nftId) public {\r\n        require(msg.sender == nftOwner[_nft][_nftId], \"You are not the owner of this NFT\");\r\n        isNftChangingOwner[_nft][_nftId] = true;\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address from,\r\n        uint256,\r\n        bytes calldata\r\n    ) external pure override returns (bytes4) {\r\n        // require(from == address(), \"Cannot send nfts to Vault dirrectly\");\r\n        \r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Libraries\\Desktop\\React\\Fractionalise NFT frontend v2 bootstrap\\contracts\\Storage.sol",
  "ast": {
    "absolutePath": "project:/contracts/Storage.sol",
    "exportedSymbols": {
      "Address": [
        2226
      ],
      "Context": [
        2248
      ],
      "ERC165": [
        2475
      ],
      "ERC20": [
        730
      ],
      "ERC20Burnable": [
        852
      ],
      "ERC721": [
        1743
      ],
      "ERC721Holder": [
        1931
      ],
      "IERC165": [
        2487
      ],
      "IERC20": [
        808
      ],
      "IERC20Metadata": [
        877
      ],
      "IERC721": [
        1859
      ],
      "IERC721Metadata": [
        1904
      ],
      "IERC721Receiver": [
        1877
      ],
      "ReentrancyGuard": [
        144
      ],
      "Storage": [
        4446
      ],
      "Strings": [
        2451
      ],
      "baseFractionToken": [
        3833
      ]
    },
    "id": 4447,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3928,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3929,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1878,
        "src": "25:66:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3930,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1744,
        "src": "93:57:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 3931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1932,
        "src": "152:69:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FractionToken.sol",
        "file": "./FractionToken.sol",
        "id": 3932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 3834,
        "src": "223:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3933,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1877,
              "src": "276:15:20"
            },
            "id": 3934,
            "nodeType": "InheritanceSpecifier",
            "src": "276:15:20"
          }
        ],
        "canonicalName": "Storage",
        "contractDependencies": [
          3833
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4446,
        "linearizedBaseContracts": [
          4446,
          1877
        ],
        "name": "Storage",
        "nameLocation": "265:7:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3941,
            "mutability": "mutable",
            "name": "isNftDeposited",
            "nameLocation": "340:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "299:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3940,
              "keyType": {
                "id": 3936,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3935,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "307:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "307:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "299:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3939,
                "keyType": {
                  "id": 3937,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "317:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3938,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3948,
            "mutability": "mutable",
            "name": "nftOwner",
            "nameLocation": "405:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "361:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3947,
              "keyType": {
                "id": 3943,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3942,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "369:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "369:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "361:43:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3946,
                "keyType": {
                  "id": 3944,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "379:24:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3945,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3955,
            "mutability": "mutable",
            "name": "isNftChangingOwner",
            "nameLocation": "461:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "420:59:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3954,
              "keyType": {
                "id": 3950,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3949,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "428:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "428:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "420:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3953,
                "keyType": {
                  "id": 3951,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "438:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3952,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "454:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3962,
            "mutability": "mutable",
            "name": "isNftFractionalised",
            "nameLocation": "529:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "488:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3961,
              "keyType": {
                "id": 3957,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3956,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "496:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "496:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "488:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3960,
                "keyType": {
                  "id": 3958,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "514:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "506:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3959,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3969,
            "mutability": "mutable",
            "name": "fractionTokenAddressFromNft",
            "nameLocation": "599:27:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "555:71:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3968,
              "keyType": {
                "id": 3964,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3963,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "563:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "563:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "555:43:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3967,
                "keyType": {
                  "id": 3965,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "573:24:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3966,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3974,
            "mutability": "mutable",
            "name": "nftAddressFromFraction",
            "nameLocation": "671:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "633:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
              "typeString": "mapping(contract baseFractionToken => address)"
            },
            "typeName": {
              "id": 3973,
              "keyType": {
                "id": 3971,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3970,
                  "name": "baseFractionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3833,
                  "src": "641:17:20"
                },
                "referencedDeclaration": 3833,
                "src": "641:17:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                  "typeString": "contract baseFractionToken"
                }
              },
              "nodeType": "Mapping",
              "src": "633:37:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
                "typeString": "mapping(contract baseFractionToken => address)"
              },
              "valueType": {
                "id": 3972,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "662:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3979,
            "mutability": "mutable",
            "name": "nftIdFromFraction",
            "nameLocation": "735:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "700:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
              "typeString": "mapping(contract baseFractionToken => uint256)"
            },
            "typeName": {
              "id": 3978,
              "keyType": {
                "id": 3976,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3975,
                  "name": "baseFractionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3833,
                  "src": "708:17:20"
                },
                "referencedDeclaration": 3833,
                "src": "708:17:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                  "typeString": "contract baseFractionToken"
                }
              },
              "nodeType": "Mapping",
              "src": "700:34:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
                "typeString": "mapping(contract baseFractionToken => uint256)"
              },
              "valueType": {
                "id": 3977,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "729:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3981,
            "mutability": "mutable",
            "name": "contractDeployer",
            "nameLocation": "769:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "761:24:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3980,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "761:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3989,
              "nodeType": "Block",
              "src": "808:48:20",
              "statements": [
                {
                  "expression": {
                    "id": 3987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3984,
                      "name": "contractDeployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "819:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3985,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "838:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "838:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3988,
                  "nodeType": "ExpressionStatement",
                  "src": "819:29:20"
                }
              ]
            },
            "id": 3990,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:20"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:0:20"
            },
            "scope": 4446,
            "src": "794:62:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4001,
              "nodeType": "Block",
              "src": "894:120:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3993,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "914:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "914:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3995,
                          "name": "contractDeployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3981,
                          "src": "928:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "914:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e7472616374206465706c6f7965722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:47:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a675687ec54a23e4d0373b607d0f62e679b46217c1388c1ac490249c7693f090",
                          "typeString": "literal_string \"Only contract deployer can call this function\""
                        },
                        "value": "Only contract deployer can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a675687ec54a23e4d0373b607d0f62e679b46217c1388c1ac490249c7693f090",
                          "typeString": "literal_string \"Only contract deployer can call this function\""
                        }
                      ],
                      "id": 3992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "905:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:89:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3999,
                  "nodeType": "ExpressionStatement",
                  "src": "905:89:20"
                },
                {
                  "id": 4000,
                  "nodeType": "PlaceholderStatement",
                  "src": "1005:1:20"
                }
              ]
            },
            "id": 4002,
            "name": "contractDeployerOnly",
            "nameLocation": "873:20:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:20"
            },
            "src": "864:150:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4051,
              "nodeType": "Block",
              "src": "1098:308:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4013,
                              "name": "isNftChangingOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3955,
                              "src": "1117:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 4015,
                            "indexExpression": {
                              "id": 4014,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "1136:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1117:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4017,
                          "indexExpression": {
                            "id": 4016,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4007,
                            "src": "1142:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1117:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 4018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1153:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1117:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6674206973206e6f74206368616e67696e67206f776e6572",
                        "id": 4020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
                          "typeString": "literal_string \"Nft is not changing owner\""
                        },
                        "value": "Nft is not changing owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
                          "typeString": "literal_string \"Nft is not changing owner\""
                        }
                      ],
                      "id": 4012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1109:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:78:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4022,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:78:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4024,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1206:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1206:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4026,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "1220:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4028,
                            "indexExpression": {
                              "id": 4027,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "1229:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1220:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4030,
                          "indexExpression": {
                            "id": 4029,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4007,
                            "src": "1235:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1220:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1206:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572206f66204e46542063616e206368616e6765204e4654206f776e6572",
                        "id": 4032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1244:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
                          "typeString": "literal_string \"Only current owner of NFT can change NFT owner\""
                        },
                        "value": "Only current owner of NFT can change NFT owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
                          "typeString": "literal_string \"Only current owner of NFT can change NFT owner\""
                        }
                      ],
                      "id": 4023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1198:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:95:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:95:20"
                },
                {
                  "expression": {
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4035,
                          "name": "isNftChangingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "1314:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4038,
                        "indexExpression": {
                          "id": 4036,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4005,
                          "src": "1333:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1314:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4039,
                      "indexExpression": {
                        "id": 4037,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4007,
                        "src": "1339:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1314:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1349:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1314:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:40:20"
                },
                {
                  "expression": {
                    "id": 4049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4043,
                          "name": "nftOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "1365:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4046,
                        "indexExpression": {
                          "id": 4044,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4005,
                          "src": "1374:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1365:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4047,
                      "indexExpression": {
                        "id": 4045,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4007,
                        "src": "1380:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1365:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4048,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4009,
                      "src": "1390:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1365:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4050,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:33:20"
                }
              ]
            },
            "functionSelector": "f2bb4a88",
            "id": 4052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNftOwner",
            "nameLocation": "1035:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4005,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1054:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1047:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4003,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "1047:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "1047:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4007,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1065:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1060:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4006,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4009,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1081:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1073:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:44:20"
            },
            "returnParameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:0:20"
            },
            "scope": 4446,
            "src": "1026:380:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4088,
              "nodeType": "Block",
              "src": "1487:266:20",
              "statements": [
                {
                  "assignments": [
                    4063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4063,
                      "mutability": "mutable",
                      "name": "hasDeposited",
                      "nameLocation": "1503:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4088,
                      "src": "1498:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4062,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1498:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4069,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4064,
                        "name": "isNftDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3941,
                        "src": "1518:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4066,
                      "indexExpression": {
                        "id": 4065,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1533:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1518:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4068,
                    "indexExpression": {
                      "id": 4067,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1539:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1518:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1498:48:20"
                },
                {
                  "assignments": [
                    4071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4071,
                      "mutability": "mutable",
                      "name": "hasFractionalise",
                      "nameLocation": "1562:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4088,
                      "src": "1557:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4070,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1557:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4077,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4072,
                        "name": "isNftFractionalised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "1581:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4074,
                      "indexExpression": {
                        "id": 4073,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1601:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1581:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4076,
                    "indexExpression": {
                      "id": 4075,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1607:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1581:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1557:57:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4078,
                      "name": "hasDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4063,
                      "src": "1629:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 4079,
                      "name": "hasFractionalise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4071,
                      "src": "1645:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1629:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4086,
                    "nodeType": "Block",
                    "src": "1707:39:20",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1729:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 4061,
                        "id": 4085,
                        "nodeType": "Return",
                        "src": "1722:12:20"
                      }
                    ]
                  },
                  "id": 4087,
                  "nodeType": "IfStatement",
                  "src": "1625:121:20",
                  "trueBody": {
                    "id": 4083,
                    "nodeType": "Block",
                    "src": "1663:38:20",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 4081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1685:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4061,
                        "id": 4082,
                        "nodeType": "Return",
                        "src": "1678:11:20"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "dcea9a96",
            "id": 4089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNftActive",
            "nameLocation": "1423:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4055,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1442:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1435:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4053,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "1435:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "1435:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4057,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1453:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1448:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4056,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1434:26:20"
            },
            "returnParameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1481:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:6:20"
            },
            "scope": 4446,
            "src": "1414:339:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4132,
              "nodeType": "Block",
              "src": "1833:272:20",
              "statements": [
                {
                  "assignments": [
                    4098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4098,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "1902:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4132,
                      "src": "1895:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4096,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "1895:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "1895:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4102,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4100,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4091,
                        "src": "1915:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4099,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "1908:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1895:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1967:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1967:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4110,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1987:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1979:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1979:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1979:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4112,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "1994:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4103,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "1946:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "1946:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:55:20"
                },
                {
                  "expression": {
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4115,
                          "name": "isNftDeposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3941,
                          "src": "2018:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4118,
                        "indexExpression": {
                          "id": 4116,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "2033:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2018:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4119,
                      "indexExpression": {
                        "id": 4117,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "2038:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2018:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2048:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2018:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:34:20"
                },
                {
                  "expression": {
                    "id": 4130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4123,
                          "name": "nftOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "2063:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4126,
                        "indexExpression": {
                          "id": 4124,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "2072:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2063:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4127,
                      "indexExpression": {
                        "id": 4125,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "2077:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2063:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4128,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2087:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2087:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2063:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4131,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:34:20"
                }
              ]
            },
            "functionSelector": "a72e2cd6",
            "id": 4133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nameLocation": "1770:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4091,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "1789:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "1781:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4093,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1818:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "1810:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:45:20"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:0:20"
            },
            "scope": 4446,
            "src": "1761:344:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4215,
              "nodeType": "Block",
              "src": "2349:1050:20",
              "statements": [
                {
                  "assignments": [
                    4150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4150,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2367:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4215,
                      "src": "2360:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4149,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4148,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "2360:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "2360:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4152,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4135,
                        "src": "2380:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4151,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "2373:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2373:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2360:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4156,
                            "name": "isNftDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3941,
                            "src": "2419:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                            }
                          },
                          "id": 4158,
                          "indexExpression": {
                            "id": 4157,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4150,
                            "src": "2434:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1743",
                              "typeString": "contract ERC721"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2419:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 4160,
                        "indexExpression": {
                          "id": 4159,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4137,
                          "src": "2439:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2419:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e4654206861736e2774206265656e206465706f736974656420796574",
                        "id": 4161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
                          "typeString": "literal_string \"This NFT hasn't been deposited yet\""
                        },
                        "value": "This NFT hasn't been deposited yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
                          "typeString": "literal_string \"This NFT hasn't been deposited yet\""
                        }
                      ],
                      "id": 4155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2411:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4163,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4165,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "2504:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4167,
                            "indexExpression": {
                              "id": 4166,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4150,
                              "src": "2513:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2504:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4169,
                          "indexExpression": {
                            "id": 4168,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4137,
                            "src": "2518:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2504:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2529:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2529:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2504:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973204e4654",
                        "id": 4173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        },
                        "value": "You do not own this NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        }
                      ],
                      "id": 4164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2496:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4175,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:71:20"
                },
                {
                  "expression": {
                    "id": 4182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4176,
                          "name": "isNftFractionalised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3962,
                          "src": "2580:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4179,
                        "indexExpression": {
                          "id": 4177,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4150,
                          "src": "2600:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2580:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4180,
                      "indexExpression": {
                        "id": 4178,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "2605:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2580:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2615:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2580:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4183,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:39:20"
                },
                {
                  "assignments": [
                    4186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4186,
                      "mutability": "mutable",
                      "name": "FractionToken",
                      "nameLocation": "2650:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4215,
                      "src": "2632:31:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      },
                      "typeName": {
                        "id": 4185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4184,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "2632:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "2632:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4203,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4190,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4150,
                        "src": "2688:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      {
                        "id": 4191,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "2758:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2831:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2831:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4194,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4143,
                        "src": "2908:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4195,
                        "name": "_tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4145,
                        "src": "2985:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4196,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3064:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4197,
                        "name": "_royaltyPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "3202:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4200,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3296:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3287:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4198,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3287:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3287:14:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2666:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC721_$1743_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_baseFractionToken_$3833_$",
                        "typeString": "function (contract ERC721,uint256,address,string memory,string memory,uint256,uint256,address) returns (contract baseFractionToken)"
                      },
                      "typeName": {
                        "id": 4188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4187,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "2670:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "2670:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      }
                    },
                    "id": 4202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:646:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2632:680:20"
                },
                {
                  "expression": {
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4204,
                          "name": "fractionTokenAddressFromNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3969,
                          "src": "3325:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4207,
                        "indexExpression": {
                          "id": 4205,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4150,
                          "src": "3353:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3325:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4208,
                      "indexExpression": {
                        "id": 4206,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "3358:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3325:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4211,
                          "name": "FractionToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4186,
                          "src": "3377:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                            "typeString": "contract baseFractionToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                            "typeString": "contract baseFractionToken"
                          }
                        ],
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3368:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3368:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3368:23:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3325:66:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4214,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:66:20"
                }
              ]
            },
            "functionSelector": "afabcf7d",
            "id": 4216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFraction",
            "nameLocation": "2122:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4135,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "2155:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2147:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "2193:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2185:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "2218:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2210:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4141,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "2255:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2247:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4143,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "2287:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2273:24:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4145,
                  "mutability": "mutable",
                  "name": "_tokenTicker",
                  "nameLocation": "2322:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2308:26:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:205:20"
            },
            "returnParameters": {
              "id": 4147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:0:20"
            },
            "scope": 4446,
            "src": "2113:1286:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4285,
              "nodeType": "Block",
              "src": "3481:624:20",
              "statements": [
                {
                  "assignments": [
                    4225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4225,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "3499:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4285,
                      "src": "3492:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4223,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "3492:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "3492:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4227,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4218,
                        "src": "3512:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4226,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "3505:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3505:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3492:40:20"
                },
                {
                  "assignments": [
                    4232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4232,
                      "mutability": "mutable",
                      "name": "FractionToken",
                      "nameLocation": "3561:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4285,
                      "src": "3543:31:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      },
                      "typeName": {
                        "id": 4231,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4230,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "3543:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "3543:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4240,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4234,
                            "name": "fractionTokenAddressFromNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3969,
                            "src": "3595:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                            }
                          },
                          "id": 4236,
                          "indexExpression": {
                            "id": 4235,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "3623:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1743",
                              "typeString": "contract ERC721"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3595:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 4238,
                        "indexExpression": {
                          "id": 4237,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4220,
                          "src": "3628:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3595:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4233,
                      "name": "baseFractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3833,
                      "src": "3577:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_baseFractionToken_$3833_$",
                        "typeString": "type(contract baseFractionToken)"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:93:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4242,
                              "name": "isNftDeposited",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3941,
                              "src": "3665:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 4244,
                            "indexExpression": {
                              "id": 4243,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4225,
                              "src": "3680:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3665:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4246,
                          "indexExpression": {
                            "id": 4245,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4220,
                            "src": "3685:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3665:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 4247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3696:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3665:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f742077697468647261776e",
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
                          "typeString": "literal_string \"This NFT is not withdrawn\""
                        },
                        "value": "This NFT is not withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
                          "typeString": "literal_string \"This NFT is not withdrawn\""
                        }
                      ],
                      "id": 4241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3657:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:73:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4251,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:73:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4253,
                                "name": "isNftFractionalised",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3962,
                                "src": "3749:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                                }
                              },
                              "id": 4255,
                              "indexExpression": {
                                "id": 4254,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4225,
                                "src": "3769:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721_$1743",
                                  "typeString": "contract ERC721"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3749:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 4257,
                            "indexExpression": {
                              "id": 4256,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4220,
                              "src": "3774:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3749:32:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 4258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3785:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3749:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4262,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3835:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3835:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4260,
                                "name": "FractionToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4232,
                                "src": "3811:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                                  "typeString": "contract baseFractionToken"
                                }
                              },
                              "id": 4261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 243,
                              "src": "3811:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3811:35:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4265,
                                "name": "FractionToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4232,
                                "src": "3850:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                                  "typeString": "contract baseFractionToken"
                                }
                              },
                              "id": 4266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 229,
                              "src": "3850:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3850:27:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3811:66:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3749:128:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46542063616e6e6f742062652077697468647261776e2c20657468657220746865204e465420686173206265656e2077697468647261776e206f7220796f7520646f206e6f74206f776e2074686520746f74616c20737570706c79206f66206672616374696f6e20746f6b656e73",
                        "id": 4270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3897:113:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
                          "typeString": "literal_string \"NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens\""
                        },
                        "value": "NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
                          "typeString": "literal_string \"NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens\""
                        }
                      ],
                      "id": 4252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3741:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:288:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4272,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:288:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4278,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4071:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4063:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4063:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4063:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4280,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4078:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4078:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4282,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "4090:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4273,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "4042:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "4042:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4284,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:55:20"
                }
              ]
            },
            "functionSelector": "d8fc6519",
            "id": 4286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawNft",
            "nameLocation": "3417:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4218,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "3437:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "3429:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "3466:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "3458:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3428:45:20"
            },
            "returnParameters": {
              "id": 4222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:20"
            },
            "scope": 4446,
            "src": "3408:697:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4302,
              "nodeType": "Block",
              "src": "4193:48:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4296,
                        "name": "nftOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "4211:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                        }
                      },
                      "id": 4298,
                      "indexExpression": {
                        "id": 4297,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4289,
                        "src": "4220:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4211:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4300,
                    "indexExpression": {
                      "id": 4299,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "4226:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4211:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4295,
                  "id": 4301,
                  "nodeType": "Return",
                  "src": "4204:29:20"
                }
              ]
            },
            "functionSelector": "50446136",
            "id": 4303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftOwner",
            "nameLocation": "4126:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4289,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4145:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4138:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4288,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4287,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4138:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4138:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4291,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4156:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4151:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4290,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4151:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4137:26:20"
            },
            "returnParameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4184:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4183:9:20"
            },
            "scope": 4446,
            "src": "4117:124:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4319,
              "nodeType": "Block",
              "src": "4330:58:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4313,
                        "name": "isNftChangingOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "4348:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4315,
                      "indexExpression": {
                        "id": 4314,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4306,
                        "src": "4367:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4348:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4317,
                    "indexExpression": {
                      "id": 4316,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4308,
                      "src": "4373:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4348:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4312,
                  "id": 4318,
                  "nodeType": "Return",
                  "src": "4341:39:20"
                }
              ]
            },
            "functionSelector": "ab2397f7",
            "id": 4320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsChangingNftOwner",
            "nameLocation": "4256:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4285:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4278:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4304,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4278:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4278:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4308,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4296:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4291:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4277:26:20"
            },
            "returnParameters": {
              "id": 4312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4324:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4323:6:20"
            },
            "scope": 4446,
            "src": "4247:141:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4336,
              "nodeType": "Block",
              "src": "4484:67:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4330,
                        "name": "fractionTokenAddressFromNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "4502:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                        }
                      },
                      "id": 4332,
                      "indexExpression": {
                        "id": 4331,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4323,
                        "src": "4530:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4502:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4334,
                    "indexExpression": {
                      "id": 4333,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4325,
                      "src": "4536:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4502:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4329,
                  "id": 4335,
                  "nodeType": "Return",
                  "src": "4495:48:20"
                }
              ]
            },
            "functionSelector": "aafef267",
            "id": 4337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFractionAddressFromNft",
            "nameLocation": "4403:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4323,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4436:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4429:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4321,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4429:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4429:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4325,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4447:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4442:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4324,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4428:26:20"
            },
            "returnParameters": {
              "id": 4329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4475:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4475:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4474:9:20"
            },
            "scope": 4446,
            "src": "4394:157:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4349,
              "nodeType": "Block",
              "src": "4648:59:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4345,
                      "name": "nftIdFromFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3979,
                      "src": "4666:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
                        "typeString": "mapping(contract baseFractionToken => uint256)"
                      }
                    },
                    "id": 4347,
                    "indexExpression": {
                      "id": 4346,
                      "name": "_fractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4340,
                      "src": "4684:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4666:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4344,
                  "id": 4348,
                  "nodeType": "Return",
                  "src": "4659:40:20"
                }
              ]
            },
            "functionSelector": "8c4d094a",
            "id": 4350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftIdFromFraction",
            "nameLocation": "4566:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4340,
                  "mutability": "mutable",
                  "name": "_fractionToken",
                  "nameLocation": "4605:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4350,
                  "src": "4587:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                    "typeString": "contract baseFractionToken"
                  },
                  "typeName": {
                    "id": 4339,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4338,
                      "name": "baseFractionToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3833,
                      "src": "4587:17:20"
                    },
                    "referencedDeclaration": 3833,
                    "src": "4587:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:34:20"
            },
            "returnParameters": {
              "id": 4344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4350,
                  "src": "4642:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4641:6:20"
            },
            "scope": 4446,
            "src": "4557:150:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4362,
              "nodeType": "Block",
              "src": "4817:64:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4358,
                      "name": "nftAddressFromFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3974,
                      "src": "4835:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
                        "typeString": "mapping(contract baseFractionToken => address)"
                      }
                    },
                    "id": 4360,
                    "indexExpression": {
                      "id": 4359,
                      "name": "_fractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4353,
                      "src": "4858:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4835:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4357,
                  "id": 4361,
                  "nodeType": "Return",
                  "src": "4828:45:20"
                }
              ]
            },
            "functionSelector": "add933a3",
            "id": 4363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftAddressFromFraction",
            "nameLocation": "4728:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4353,
                  "mutability": "mutable",
                  "name": "_fractionToken",
                  "nameLocation": "4772:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4363,
                  "src": "4754:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                    "typeString": "contract baseFractionToken"
                  },
                  "typeName": {
                    "id": 4352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4351,
                      "name": "baseFractionToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3833,
                      "src": "4754:17:20"
                    },
                    "referencedDeclaration": 3833,
                    "src": "4754:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4753:34:20"
            },
            "returnParameters": {
              "id": 4357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4363,
                  "src": "4808:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4808:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4807:9:20"
            },
            "scope": 4446,
            "src": "4719:162:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4379,
              "nodeType": "Block",
              "src": "4969:54:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4373,
                        "name": "isNftDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3941,
                        "src": "4987:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4375,
                      "indexExpression": {
                        "id": 4374,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4366,
                        "src": "5002:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4987:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4377,
                    "indexExpression": {
                      "id": 4376,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4368,
                      "src": "5008:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4987:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4372,
                  "id": 4378,
                  "nodeType": "Return",
                  "src": "4980:35:20"
                }
              ]
            },
            "functionSelector": "b6926178",
            "id": 4380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsNftDeposited",
            "nameLocation": "4898:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4366,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4923:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4916:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4365,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4364,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4916:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4916:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4368,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4934:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4929:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4367,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4915:26:20"
            },
            "returnParameters": {
              "id": 4372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4963:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4962:6:20"
            },
            "scope": 4446,
            "src": "4889:134:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4396,
              "nodeType": "Block",
              "src": "5116:59:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4390,
                        "name": "isNftFractionalised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "5134:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4392,
                      "indexExpression": {
                        "id": 4391,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "5154:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5134:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4394,
                    "indexExpression": {
                      "id": 4393,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4385,
                      "src": "5160:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5134:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4389,
                  "id": 4395,
                  "nodeType": "Return",
                  "src": "5127:40:20"
                }
              ]
            },
            "functionSelector": "491f6674",
            "id": 4397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsNftFractionalised",
            "nameLocation": "5040:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "5070:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5063:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4381,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "5063:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "5063:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4385,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "5081:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5076:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4384,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5062:26:20"
            },
            "returnParameters": {
              "id": 4389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5110:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5109:6:20"
            },
            "scope": 4446,
            "src": "5031:144:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4425,
              "nodeType": "Block",
              "src": "5251:151:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4406,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5270:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5270:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4408,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "5284:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4410,
                            "indexExpression": {
                              "id": 4409,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4400,
                              "src": "5293:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5284:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4412,
                          "indexExpression": {
                            "id": 4411,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4402,
                            "src": "5299:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5284:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5270:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
                        "id": 4414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
                          "typeString": "literal_string \"You are not the owner of this NFT\""
                        },
                        "value": "You are not the owner of this NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
                          "typeString": "literal_string \"You are not the owner of this NFT\""
                        }
                      ],
                      "id": 4405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5262:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5262:82:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "5262:82:20"
                },
                {
                  "expression": {
                    "id": 4423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4417,
                          "name": "isNftChangingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "5355:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4420,
                        "indexExpression": {
                          "id": 4418,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "5374:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5355:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4421,
                      "indexExpression": {
                        "id": 4419,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4402,
                        "src": "5380:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5355:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5390:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5355:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4424,
                  "nodeType": "ExpressionStatement",
                  "src": "5355:39:20"
                }
              ]
            },
            "functionSelector": "6b1ac398",
            "id": 4426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setIsNftChangingOwnerTrue",
            "nameLocation": "5192:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4400,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "5225:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4426,
                  "src": "5218:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4398,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "5218:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "5218:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4402,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "5236:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4426,
                  "src": "5231:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5231:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5217:26:20"
            },
            "returnParameters": {
              "id": 4404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5251:0:20"
            },
            "scope": 4446,
            "src": "5183:219:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1876
            ],
            "body": {
              "id": 4444,
              "nodeType": "Block",
              "src": "5567:156:20",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 4440,
                        "name": "IERC721Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "5674:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1877_$",
                          "typeString": "type(contract IERC721Receiver)"
                        }
                      },
                      "id": 4441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "5674:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5674:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 4439,
                  "id": 4443,
                  "nodeType": "Return",
                  "src": "5667:48:20"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 4445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5419:16:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5541:8:20"
            },
            "parameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5446:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5446:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4430,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5472:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5464:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5487:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5505:14:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5435:91:20"
            },
            "returnParameters": {
              "id": 4439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5559:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4437,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:8:20"
            },
            "scope": 4446,
            "src": "5410:313:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4447,
        "src": "256:5470:20",
        "usedErrors": []
      }
    ],
    "src": "0:5728:20"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Storage.sol",
    "exportedSymbols": {
      "Address": [
        2226
      ],
      "Context": [
        2248
      ],
      "ERC165": [
        2475
      ],
      "ERC20": [
        730
      ],
      "ERC20Burnable": [
        852
      ],
      "ERC721": [
        1743
      ],
      "ERC721Holder": [
        1931
      ],
      "IERC165": [
        2487
      ],
      "IERC20": [
        808
      ],
      "IERC20Metadata": [
        877
      ],
      "IERC721": [
        1859
      ],
      "IERC721Metadata": [
        1904
      ],
      "IERC721Receiver": [
        1877
      ],
      "ReentrancyGuard": [
        144
      ],
      "Storage": [
        4446
      ],
      "Strings": [
        2451
      ],
      "baseFractionToken": [
        3833
      ]
    },
    "id": 4447,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3928,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3929,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1878,
        "src": "25:66:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3930,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1744,
        "src": "93:57:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 3931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 1932,
        "src": "152:69:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FractionToken.sol",
        "file": "./FractionToken.sol",
        "id": 3932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4447,
        "sourceUnit": 3834,
        "src": "223:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3933,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1877,
              "src": "276:15:20"
            },
            "id": 3934,
            "nodeType": "InheritanceSpecifier",
            "src": "276:15:20"
          }
        ],
        "canonicalName": "Storage",
        "contractDependencies": [
          3833
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4446,
        "linearizedBaseContracts": [
          4446,
          1877
        ],
        "name": "Storage",
        "nameLocation": "265:7:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3941,
            "mutability": "mutable",
            "name": "isNftDeposited",
            "nameLocation": "340:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "299:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3940,
              "keyType": {
                "id": 3936,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3935,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "307:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "307:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "299:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3939,
                "keyType": {
                  "id": 3937,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "317:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3938,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3948,
            "mutability": "mutable",
            "name": "nftOwner",
            "nameLocation": "405:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "361:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3947,
              "keyType": {
                "id": 3943,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3942,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "369:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "369:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "361:43:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3946,
                "keyType": {
                  "id": 3944,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "379:24:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3945,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3955,
            "mutability": "mutable",
            "name": "isNftChangingOwner",
            "nameLocation": "461:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "420:59:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3954,
              "keyType": {
                "id": 3950,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3949,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "428:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "428:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "420:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3953,
                "keyType": {
                  "id": 3951,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "438:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3952,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "454:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3962,
            "mutability": "mutable",
            "name": "isNftFractionalised",
            "nameLocation": "529:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "488:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 3961,
              "keyType": {
                "id": 3957,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3956,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "496:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "496:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "488:40:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 3960,
                "keyType": {
                  "id": 3958,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "514:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "506:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 3959,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3969,
            "mutability": "mutable",
            "name": "fractionTokenAddressFromNft",
            "nameLocation": "599:27:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "555:71:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 3968,
              "keyType": {
                "id": 3964,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3963,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1743,
                  "src": "563:6:20"
                },
                "referencedDeclaration": 1743,
                "src": "563:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1743",
                  "typeString": "contract ERC721"
                }
              },
              "nodeType": "Mapping",
              "src": "555:43:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 3967,
                "keyType": {
                  "id": 3965,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "573:24:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 3966,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3974,
            "mutability": "mutable",
            "name": "nftAddressFromFraction",
            "nameLocation": "671:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "633:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
              "typeString": "mapping(contract baseFractionToken => address)"
            },
            "typeName": {
              "id": 3973,
              "keyType": {
                "id": 3971,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3970,
                  "name": "baseFractionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3833,
                  "src": "641:17:20"
                },
                "referencedDeclaration": 3833,
                "src": "641:17:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                  "typeString": "contract baseFractionToken"
                }
              },
              "nodeType": "Mapping",
              "src": "633:37:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
                "typeString": "mapping(contract baseFractionToken => address)"
              },
              "valueType": {
                "id": 3972,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "662:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3979,
            "mutability": "mutable",
            "name": "nftIdFromFraction",
            "nameLocation": "735:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "700:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
              "typeString": "mapping(contract baseFractionToken => uint256)"
            },
            "typeName": {
              "id": 3978,
              "keyType": {
                "id": 3976,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3975,
                  "name": "baseFractionToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3833,
                  "src": "708:17:20"
                },
                "referencedDeclaration": 3833,
                "src": "708:17:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                  "typeString": "contract baseFractionToken"
                }
              },
              "nodeType": "Mapping",
              "src": "700:34:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
                "typeString": "mapping(contract baseFractionToken => uint256)"
              },
              "valueType": {
                "id": 3977,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "729:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3981,
            "mutability": "mutable",
            "name": "contractDeployer",
            "nameLocation": "769:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 4446,
            "src": "761:24:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3980,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "761:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3989,
              "nodeType": "Block",
              "src": "808:48:20",
              "statements": [
                {
                  "expression": {
                    "id": 3987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3984,
                      "name": "contractDeployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "819:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3985,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "838:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "838:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3988,
                  "nodeType": "ExpressionStatement",
                  "src": "819:29:20"
                }
              ]
            },
            "id": 3990,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:20"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:0:20"
            },
            "scope": 4446,
            "src": "794:62:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4001,
              "nodeType": "Block",
              "src": "894:120:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3993,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "914:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "914:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3995,
                          "name": "contractDeployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3981,
                          "src": "928:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "914:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e7472616374206465706c6f7965722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:47:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a675687ec54a23e4d0373b607d0f62e679b46217c1388c1ac490249c7693f090",
                          "typeString": "literal_string \"Only contract deployer can call this function\""
                        },
                        "value": "Only contract deployer can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a675687ec54a23e4d0373b607d0f62e679b46217c1388c1ac490249c7693f090",
                          "typeString": "literal_string \"Only contract deployer can call this function\""
                        }
                      ],
                      "id": 3992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "905:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:89:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3999,
                  "nodeType": "ExpressionStatement",
                  "src": "905:89:20"
                },
                {
                  "id": 4000,
                  "nodeType": "PlaceholderStatement",
                  "src": "1005:1:20"
                }
              ]
            },
            "id": 4002,
            "name": "contractDeployerOnly",
            "nameLocation": "873:20:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:20"
            },
            "src": "864:150:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4051,
              "nodeType": "Block",
              "src": "1098:308:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4013,
                              "name": "isNftChangingOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3955,
                              "src": "1117:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 4015,
                            "indexExpression": {
                              "id": 4014,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "1136:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1117:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4017,
                          "indexExpression": {
                            "id": 4016,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4007,
                            "src": "1142:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1117:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 4018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1153:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1117:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6674206973206e6f74206368616e67696e67206f776e6572",
                        "id": 4020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
                          "typeString": "literal_string \"Nft is not changing owner\""
                        },
                        "value": "Nft is not changing owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_802c6d7675ed76af0aa8f4ed07f5a4a512ffde9bcfce29475a9609d3fb91ea3a",
                          "typeString": "literal_string \"Nft is not changing owner\""
                        }
                      ],
                      "id": 4012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1109:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:78:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4022,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:78:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4024,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1206:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1206:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4026,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "1220:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4028,
                            "indexExpression": {
                              "id": 4027,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4005,
                              "src": "1229:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1220:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4030,
                          "indexExpression": {
                            "id": 4029,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4007,
                            "src": "1235:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1220:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1206:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572206f66204e46542063616e206368616e6765204e4654206f776e6572",
                        "id": 4032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1244:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
                          "typeString": "literal_string \"Only current owner of NFT can change NFT owner\""
                        },
                        "value": "Only current owner of NFT can change NFT owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_417f6419fe91fb456c52a3a74af80b03e3967a4d8e6f9fcc59291a86c199ef3b",
                          "typeString": "literal_string \"Only current owner of NFT can change NFT owner\""
                        }
                      ],
                      "id": 4023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1198:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:95:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:95:20"
                },
                {
                  "expression": {
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4035,
                          "name": "isNftChangingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "1314:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4038,
                        "indexExpression": {
                          "id": 4036,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4005,
                          "src": "1333:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1314:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4039,
                      "indexExpression": {
                        "id": 4037,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4007,
                        "src": "1339:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1314:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1349:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1314:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:40:20"
                },
                {
                  "expression": {
                    "id": 4049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4043,
                          "name": "nftOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "1365:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4046,
                        "indexExpression": {
                          "id": 4044,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4005,
                          "src": "1374:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1365:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4047,
                      "indexExpression": {
                        "id": 4045,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4007,
                        "src": "1380:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1365:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4048,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4009,
                      "src": "1390:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1365:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4050,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:33:20"
                }
              ]
            },
            "functionSelector": "f2bb4a88",
            "id": 4052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNftOwner",
            "nameLocation": "1035:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4005,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1054:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1047:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4003,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "1047:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "1047:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4007,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1065:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1060:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4006,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4009,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1081:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "1073:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:44:20"
            },
            "returnParameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:0:20"
            },
            "scope": 4446,
            "src": "1026:380:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4088,
              "nodeType": "Block",
              "src": "1487:266:20",
              "statements": [
                {
                  "assignments": [
                    4063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4063,
                      "mutability": "mutable",
                      "name": "hasDeposited",
                      "nameLocation": "1503:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4088,
                      "src": "1498:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4062,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1498:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4069,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4064,
                        "name": "isNftDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3941,
                        "src": "1518:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4066,
                      "indexExpression": {
                        "id": 4065,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1533:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1518:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4068,
                    "indexExpression": {
                      "id": 4067,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1539:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1518:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1498:48:20"
                },
                {
                  "assignments": [
                    4071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4071,
                      "mutability": "mutable",
                      "name": "hasFractionalise",
                      "nameLocation": "1562:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4088,
                      "src": "1557:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4070,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1557:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4077,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4072,
                        "name": "isNftFractionalised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "1581:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4074,
                      "indexExpression": {
                        "id": 4073,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1601:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1581:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4076,
                    "indexExpression": {
                      "id": 4075,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1607:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1581:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1557:57:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4078,
                      "name": "hasDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4063,
                      "src": "1629:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 4079,
                      "name": "hasFractionalise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4071,
                      "src": "1645:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1629:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4086,
                    "nodeType": "Block",
                    "src": "1707:39:20",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1729:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 4061,
                        "id": 4085,
                        "nodeType": "Return",
                        "src": "1722:12:20"
                      }
                    ]
                  },
                  "id": 4087,
                  "nodeType": "IfStatement",
                  "src": "1625:121:20",
                  "trueBody": {
                    "id": 4083,
                    "nodeType": "Block",
                    "src": "1663:38:20",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 4081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1685:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4061,
                        "id": 4082,
                        "nodeType": "Return",
                        "src": "1678:11:20"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "dcea9a96",
            "id": 4089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNftActive",
            "nameLocation": "1423:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4055,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1442:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1435:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4053,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "1435:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "1435:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4057,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1453:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1448:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4056,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1434:26:20"
            },
            "returnParameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4089,
                  "src": "1481:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:6:20"
            },
            "scope": 4446,
            "src": "1414:339:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4132,
              "nodeType": "Block",
              "src": "1833:272:20",
              "statements": [
                {
                  "assignments": [
                    4098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4098,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "1902:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4132,
                      "src": "1895:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4096,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "1895:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "1895:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4102,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4100,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4091,
                        "src": "1915:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4099,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "1908:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1895:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1967:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1967:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4110,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1987:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1979:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1979:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1979:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4112,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "1994:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4103,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "1946:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "1946:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:55:20"
                },
                {
                  "expression": {
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4115,
                          "name": "isNftDeposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3941,
                          "src": "2018:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4118,
                        "indexExpression": {
                          "id": 4116,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "2033:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2018:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4119,
                      "indexExpression": {
                        "id": 4117,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "2038:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2018:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2048:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2018:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:34:20"
                },
                {
                  "expression": {
                    "id": 4130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4123,
                          "name": "nftOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "2063:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4126,
                        "indexExpression": {
                          "id": 4124,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "2072:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2063:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4127,
                      "indexExpression": {
                        "id": 4125,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4093,
                        "src": "2077:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2063:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4128,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2087:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2087:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2063:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4131,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:34:20"
                }
              ]
            },
            "functionSelector": "a72e2cd6",
            "id": 4133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nameLocation": "1770:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4091,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "1789:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "1781:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4093,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "1818:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4133,
                  "src": "1810:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:45:20"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:0:20"
            },
            "scope": 4446,
            "src": "1761:344:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4215,
              "nodeType": "Block",
              "src": "2349:1050:20",
              "statements": [
                {
                  "assignments": [
                    4150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4150,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2367:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4215,
                      "src": "2360:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4149,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4148,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "2360:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "2360:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4152,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4135,
                        "src": "2380:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4151,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "2373:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2373:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2360:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4156,
                            "name": "isNftDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3941,
                            "src": "2419:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                              "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                            }
                          },
                          "id": 4158,
                          "indexExpression": {
                            "id": 4157,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4150,
                            "src": "2434:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1743",
                              "typeString": "contract ERC721"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2419:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 4160,
                        "indexExpression": {
                          "id": 4159,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4137,
                          "src": "2439:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2419:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e4654206861736e2774206265656e206465706f736974656420796574",
                        "id": 4161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
                          "typeString": "literal_string \"This NFT hasn't been deposited yet\""
                        },
                        "value": "This NFT hasn't been deposited yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7155d114f68fe2ab0f229c518a3de5138c8241ba2b1b3137f88adaf215a634c1",
                          "typeString": "literal_string \"This NFT hasn't been deposited yet\""
                        }
                      ],
                      "id": 4155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2411:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4163,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4165,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "2504:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4167,
                            "indexExpression": {
                              "id": 4166,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4150,
                              "src": "2513:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2504:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4169,
                          "indexExpression": {
                            "id": 4168,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4137,
                            "src": "2518:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2504:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2529:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2529:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2504:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973204e4654",
                        "id": 4173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        },
                        "value": "You do not own this NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea429e64dc8be3b9b81e5ef4dd1edcbaa9ded156548c2a1a1b36d78d2dc3b9af",
                          "typeString": "literal_string \"You do not own this NFT\""
                        }
                      ],
                      "id": 4164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2496:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4175,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:71:20"
                },
                {
                  "expression": {
                    "id": 4182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4176,
                          "name": "isNftFractionalised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3962,
                          "src": "2580:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4179,
                        "indexExpression": {
                          "id": 4177,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4150,
                          "src": "2600:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2580:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4180,
                      "indexExpression": {
                        "id": 4178,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "2605:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2580:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2615:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2580:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4183,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:39:20"
                },
                {
                  "assignments": [
                    4186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4186,
                      "mutability": "mutable",
                      "name": "FractionToken",
                      "nameLocation": "2650:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4215,
                      "src": "2632:31:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      },
                      "typeName": {
                        "id": 4185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4184,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "2632:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "2632:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4203,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4190,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4150,
                        "src": "2688:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      {
                        "id": 4191,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "2758:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2831:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2831:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4194,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4143,
                        "src": "2908:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4195,
                        "name": "_tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4145,
                        "src": "2985:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4196,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3064:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4197,
                        "name": "_royaltyPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "3202:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4200,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3296:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3287:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4198,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3287:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3287:14:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2666:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC721_$1743_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_baseFractionToken_$3833_$",
                        "typeString": "function (contract ERC721,uint256,address,string memory,string memory,uint256,uint256,address) returns (contract baseFractionToken)"
                      },
                      "typeName": {
                        "id": 4188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4187,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "2670:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "2670:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      }
                    },
                    "id": 4202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:646:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2632:680:20"
                },
                {
                  "expression": {
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4204,
                          "name": "fractionTokenAddressFromNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3969,
                          "src": "3325:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                          }
                        },
                        "id": 4207,
                        "indexExpression": {
                          "id": 4205,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4150,
                          "src": "3353:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3325:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4208,
                      "indexExpression": {
                        "id": 4206,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4137,
                        "src": "3358:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3325:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4211,
                          "name": "FractionToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4186,
                          "src": "3377:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                            "typeString": "contract baseFractionToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                            "typeString": "contract baseFractionToken"
                          }
                        ],
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3368:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3368:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3368:23:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3325:66:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4214,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:66:20"
                }
              ]
            },
            "functionSelector": "afabcf7d",
            "id": 4216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFraction",
            "nameLocation": "2122:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4135,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "2155:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2147:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "2193:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2185:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "2218:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2210:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4141,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "2255:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2247:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4143,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "2287:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2273:24:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4145,
                  "mutability": "mutable",
                  "name": "_tokenTicker",
                  "nameLocation": "2322:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4216,
                  "src": "2308:26:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:205:20"
            },
            "returnParameters": {
              "id": 4147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:0:20"
            },
            "scope": 4446,
            "src": "2113:1286:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4285,
              "nodeType": "Block",
              "src": "3481:624:20",
              "statements": [
                {
                  "assignments": [
                    4225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4225,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "3499:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4285,
                      "src": "3492:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$1743",
                        "typeString": "contract ERC721"
                      },
                      "typeName": {
                        "id": 4224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4223,
                          "name": "ERC721",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1743,
                          "src": "3492:6:20"
                        },
                        "referencedDeclaration": 1743,
                        "src": "3492:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4227,
                        "name": "_nftContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4218,
                        "src": "3512:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4226,
                      "name": "ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "3505:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1743_$",
                        "typeString": "type(contract ERC721)"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3505:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3492:40:20"
                },
                {
                  "assignments": [
                    4232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4232,
                      "mutability": "mutable",
                      "name": "FractionToken",
                      "nameLocation": "3561:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4285,
                      "src": "3543:31:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      },
                      "typeName": {
                        "id": 4231,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4230,
                          "name": "baseFractionToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3833,
                          "src": "3543:17:20"
                        },
                        "referencedDeclaration": 3833,
                        "src": "3543:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                          "typeString": "contract baseFractionToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4240,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4234,
                            "name": "fractionTokenAddressFromNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3969,
                            "src": "3595:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                              "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                            }
                          },
                          "id": 4236,
                          "indexExpression": {
                            "id": 4235,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4225,
                            "src": "3623:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1743",
                              "typeString": "contract ERC721"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3595:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 4238,
                        "indexExpression": {
                          "id": 4237,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4220,
                          "src": "3628:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3595:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4233,
                      "name": "baseFractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3833,
                      "src": "3577:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_baseFractionToken_$3833_$",
                        "typeString": "type(contract baseFractionToken)"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:93:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4242,
                              "name": "isNftDeposited",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3941,
                              "src": "3665:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 4244,
                            "indexExpression": {
                              "id": 4243,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4225,
                              "src": "3680:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3665:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4246,
                          "indexExpression": {
                            "id": 4245,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4220,
                            "src": "3685:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3665:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 4247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3696:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3665:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e4654206973206e6f742077697468647261776e",
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
                          "typeString": "literal_string \"This NFT is not withdrawn\""
                        },
                        "value": "This NFT is not withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06e33b55d918cdded9a86fc6f7fb54154505c959b2b708815491f2953aeda136",
                          "typeString": "literal_string \"This NFT is not withdrawn\""
                        }
                      ],
                      "id": 4241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3657:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:73:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4251,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:73:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4253,
                                "name": "isNftFractionalised",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3962,
                                "src": "3749:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                  "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                                }
                              },
                              "id": 4255,
                              "indexExpression": {
                                "id": 4254,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4225,
                                "src": "3769:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721_$1743",
                                  "typeString": "contract ERC721"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3749:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 4257,
                            "indexExpression": {
                              "id": 4256,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4220,
                              "src": "3774:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3749:32:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 4258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3785:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3749:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4262,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3835:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3835:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4260,
                                "name": "FractionToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4232,
                                "src": "3811:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                                  "typeString": "contract baseFractionToken"
                                }
                              },
                              "id": 4261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 243,
                              "src": "3811:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3811:35:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4265,
                                "name": "FractionToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4232,
                                "src": "3850:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                                  "typeString": "contract baseFractionToken"
                                }
                              },
                              "id": 4266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 229,
                              "src": "3850:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3850:27:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3811:66:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3749:128:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46542063616e6e6f742062652077697468647261776e2c20657468657220746865204e465420686173206265656e2077697468647261776e206f7220796f7520646f206e6f74206f776e2074686520746f74616c20737570706c79206f66206672616374696f6e20746f6b656e73",
                        "id": 4270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3897:113:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
                          "typeString": "literal_string \"NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens\""
                        },
                        "value": "NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a63ed119dd9a6b6b5b6e749069a4b60d8fe4d6bd6769ccd4a30f3308074c7e69",
                          "typeString": "literal_string \"NFT cannot be withdrawn, ether the NFT has been withdrawn or you do not own the total supply of fraction tokens\""
                        }
                      ],
                      "id": 4252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3741:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:288:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4272,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:288:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4278,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4071:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Storage_$4446",
                              "typeString": "contract Storage"
                            }
                          ],
                          "id": 4277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4063:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4063:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4063:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4280,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4078:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4078:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4282,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "4090:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4273,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "4042:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 4275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "4042:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 4283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4284,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:55:20"
                }
              ]
            },
            "functionSelector": "d8fc6519",
            "id": 4286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawNft",
            "nameLocation": "3417:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4218,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "3437:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "3429:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "3466:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4286,
                  "src": "3458:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3428:45:20"
            },
            "returnParameters": {
              "id": 4222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:20"
            },
            "scope": 4446,
            "src": "3408:697:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4302,
              "nodeType": "Block",
              "src": "4193:48:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4296,
                        "name": "nftOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "4211:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                        }
                      },
                      "id": 4298,
                      "indexExpression": {
                        "id": 4297,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4289,
                        "src": "4220:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4211:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4300,
                    "indexExpression": {
                      "id": 4299,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "4226:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4211:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4295,
                  "id": 4301,
                  "nodeType": "Return",
                  "src": "4204:29:20"
                }
              ]
            },
            "functionSelector": "50446136",
            "id": 4303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftOwner",
            "nameLocation": "4126:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4289,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4145:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4138:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4288,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4287,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4138:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4138:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4291,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4156:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4151:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4290,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4151:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4137:26:20"
            },
            "returnParameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4303,
                  "src": "4184:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4183:9:20"
            },
            "scope": 4446,
            "src": "4117:124:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4319,
              "nodeType": "Block",
              "src": "4330:58:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4313,
                        "name": "isNftChangingOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "4348:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4315,
                      "indexExpression": {
                        "id": 4314,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4306,
                        "src": "4367:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4348:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4317,
                    "indexExpression": {
                      "id": 4316,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4308,
                      "src": "4373:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4348:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4312,
                  "id": 4318,
                  "nodeType": "Return",
                  "src": "4341:39:20"
                }
              ]
            },
            "functionSelector": "ab2397f7",
            "id": 4320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsChangingNftOwner",
            "nameLocation": "4256:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4285:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4278:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4304,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4278:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4278:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4308,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4296:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4291:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4277:26:20"
            },
            "returnParameters": {
              "id": 4312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4320,
                  "src": "4324:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4323:6:20"
            },
            "scope": 4446,
            "src": "4247:141:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4336,
              "nodeType": "Block",
              "src": "4484:67:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4330,
                        "name": "fractionTokenAddressFromNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "4502:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                        }
                      },
                      "id": 4332,
                      "indexExpression": {
                        "id": 4331,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4323,
                        "src": "4530:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4502:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4334,
                    "indexExpression": {
                      "id": 4333,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4325,
                      "src": "4536:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4502:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4329,
                  "id": 4335,
                  "nodeType": "Return",
                  "src": "4495:48:20"
                }
              ]
            },
            "functionSelector": "aafef267",
            "id": 4337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFractionAddressFromNft",
            "nameLocation": "4403:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4323,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4436:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4429:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4321,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4429:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4429:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4325,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4447:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4442:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4324,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4428:26:20"
            },
            "returnParameters": {
              "id": 4329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4337,
                  "src": "4475:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4475:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4474:9:20"
            },
            "scope": 4446,
            "src": "4394:157:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4349,
              "nodeType": "Block",
              "src": "4648:59:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4345,
                      "name": "nftIdFromFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3979,
                      "src": "4666:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_uint256_$",
                        "typeString": "mapping(contract baseFractionToken => uint256)"
                      }
                    },
                    "id": 4347,
                    "indexExpression": {
                      "id": 4346,
                      "name": "_fractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4340,
                      "src": "4684:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4666:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4344,
                  "id": 4348,
                  "nodeType": "Return",
                  "src": "4659:40:20"
                }
              ]
            },
            "functionSelector": "8c4d094a",
            "id": 4350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftIdFromFraction",
            "nameLocation": "4566:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4340,
                  "mutability": "mutable",
                  "name": "_fractionToken",
                  "nameLocation": "4605:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4350,
                  "src": "4587:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                    "typeString": "contract baseFractionToken"
                  },
                  "typeName": {
                    "id": 4339,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4338,
                      "name": "baseFractionToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3833,
                      "src": "4587:17:20"
                    },
                    "referencedDeclaration": 3833,
                    "src": "4587:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:34:20"
            },
            "returnParameters": {
              "id": 4344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4350,
                  "src": "4642:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4641:6:20"
            },
            "scope": 4446,
            "src": "4557:150:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4362,
              "nodeType": "Block",
              "src": "4817:64:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4358,
                      "name": "nftAddressFromFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3974,
                      "src": "4835:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_baseFractionToken_$3833_$_t_address_$",
                        "typeString": "mapping(contract baseFractionToken => address)"
                      }
                    },
                    "id": 4360,
                    "indexExpression": {
                      "id": 4359,
                      "name": "_fractionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4353,
                      "src": "4858:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                        "typeString": "contract baseFractionToken"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4835:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4357,
                  "id": 4361,
                  "nodeType": "Return",
                  "src": "4828:45:20"
                }
              ]
            },
            "functionSelector": "add933a3",
            "id": 4363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftAddressFromFraction",
            "nameLocation": "4728:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4353,
                  "mutability": "mutable",
                  "name": "_fractionToken",
                  "nameLocation": "4772:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4363,
                  "src": "4754:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                    "typeString": "contract baseFractionToken"
                  },
                  "typeName": {
                    "id": 4352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4351,
                      "name": "baseFractionToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3833,
                      "src": "4754:17:20"
                    },
                    "referencedDeclaration": 3833,
                    "src": "4754:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_baseFractionToken_$3833",
                      "typeString": "contract baseFractionToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4753:34:20"
            },
            "returnParameters": {
              "id": 4357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4363,
                  "src": "4808:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4808:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4807:9:20"
            },
            "scope": 4446,
            "src": "4719:162:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4379,
              "nodeType": "Block",
              "src": "4969:54:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4373,
                        "name": "isNftDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3941,
                        "src": "4987:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4375,
                      "indexExpression": {
                        "id": 4374,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4366,
                        "src": "5002:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4987:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4377,
                    "indexExpression": {
                      "id": 4376,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4368,
                      "src": "5008:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4987:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4372,
                  "id": 4378,
                  "nodeType": "Return",
                  "src": "4980:35:20"
                }
              ]
            },
            "functionSelector": "b6926178",
            "id": 4380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsNftDeposited",
            "nameLocation": "4898:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4366,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4923:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4916:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4365,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4364,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4916:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4916:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4368,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4934:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4929:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4367,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4915:26:20"
            },
            "returnParameters": {
              "id": 4372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4380,
                  "src": "4963:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4962:6:20"
            },
            "scope": 4446,
            "src": "4889:134:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4396,
              "nodeType": "Block",
              "src": "5116:59:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4390,
                        "name": "isNftFractionalised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "5134:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 4392,
                      "indexExpression": {
                        "id": 4391,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "5154:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1743",
                          "typeString": "contract ERC721"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5134:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 4394,
                    "indexExpression": {
                      "id": 4393,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4385,
                      "src": "5160:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5134:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4389,
                  "id": 4395,
                  "nodeType": "Return",
                  "src": "5127:40:20"
                }
              ]
            },
            "functionSelector": "491f6674",
            "id": 4397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsNftFractionalised",
            "nameLocation": "5040:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "5070:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5063:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4381,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "5063:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "5063:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4385,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "5081:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5076:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4384,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5062:26:20"
            },
            "returnParameters": {
              "id": 4389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4397,
                  "src": "5110:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5109:6:20"
            },
            "scope": 4446,
            "src": "5031:144:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4425,
              "nodeType": "Block",
              "src": "5251:151:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4406,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5270:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5270:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4408,
                              "name": "nftOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3948,
                              "src": "5284:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(contract ERC721 => mapping(uint256 => address))"
                              }
                            },
                            "id": 4410,
                            "indexExpression": {
                              "id": 4409,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4400,
                              "src": "5293:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1743",
                                "typeString": "contract ERC721"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5284:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4412,
                          "indexExpression": {
                            "id": 4411,
                            "name": "_nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4402,
                            "src": "5299:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5284:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5270:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
                        "id": 4414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
                          "typeString": "literal_string \"You are not the owner of this NFT\""
                        },
                        "value": "You are not the owner of this NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
                          "typeString": "literal_string \"You are not the owner of this NFT\""
                        }
                      ],
                      "id": 4405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5262:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5262:82:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "5262:82:20"
                },
                {
                  "expression": {
                    "id": 4423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4417,
                          "name": "isNftChangingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "5355:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC721_$1743_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(contract ERC721 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 4420,
                        "indexExpression": {
                          "id": 4418,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "5374:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1743",
                            "typeString": "contract ERC721"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5355:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4421,
                      "indexExpression": {
                        "id": 4419,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4402,
                        "src": "5380:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5355:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5390:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5355:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4424,
                  "nodeType": "ExpressionStatement",
                  "src": "5355:39:20"
                }
              ]
            },
            "functionSelector": "6b1ac398",
            "id": 4426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setIsNftChangingOwnerTrue",
            "nameLocation": "5192:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4400,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "5225:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4426,
                  "src": "5218:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1743",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 4399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4398,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "5218:6:20"
                    },
                    "referencedDeclaration": 1743,
                    "src": "5218:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1743",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4402,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "5236:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4426,
                  "src": "5231:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5231:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5217:26:20"
            },
            "returnParameters": {
              "id": 4404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5251:0:20"
            },
            "scope": 4446,
            "src": "5183:219:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1876
            ],
            "body": {
              "id": 4444,
              "nodeType": "Block",
              "src": "5567:156:20",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 4440,
                        "name": "IERC721Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "5674:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1877_$",
                          "typeString": "type(contract IERC721Receiver)"
                        }
                      },
                      "id": 4441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "5674:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5674:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 4439,
                  "id": 4443,
                  "nodeType": "Return",
                  "src": "5667:48:20"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 4445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5419:16:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5541:8:20"
            },
            "parameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5446:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5446:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4430,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5472:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5464:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5487:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5505:14:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5435:91:20"
            },
            "returnParameters": {
              "id": 4439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "5559:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4437,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:8:20"
            },
            "scope": 4446,
            "src": "5410:313:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4447,
        "src": "256:5470:20",
        "usedErrors": []
      }
    ],
    "src": "0:5728:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-06-05T19:37:13.500Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}